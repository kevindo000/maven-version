/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package taskmanager;

import org.jetbrains.annotations.NotNull;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.*;


/**
 *
 * @author Kevin Do, Ganoendorf Jallida
 */
public class ManagersPage extends javax.swing.JFrame {

    
    
    /**
     * Creates new form ManagerPage
     */
    public ManagersPage() {
        initComponents();
    }
    
    public void reload() {
        if (!this.__initialised__) {
            this.__init_tab_change_response__();
            this.__init_create_task_panel_selection_change_response__();
            this.__init_modify_user_panel_selection_change_response__();
            this.__init_manage_teams_panel_selection_change_response__();
            this.__initialised__ = true;
        }
        this.managers_page_tabbed_pane.setSelectedIndex(0);   // load the first tab by default
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        managers_page_header_pane = new javax.swing.JPanel();
        managers_page_header_label = new javax.swing.JLabel();
        task_page_header_buttons_pane = new javax.swing.JPanel();
        managers_page_logout_button = new javax.swing.JButton();
        managers_page_tabbed_pane = new javax.swing.JTabbedPane();
        managers_page_create_team_pane = new javax.swing.JPanel();
        managers_page_create_team_title_pane = new javax.swing.JPanel();
        managers_page_create_team_title_label = new javax.swing.JLabel();
        managers_page_create_team_body_pane = new javax.swing.JPanel();
        managers_page_create_team_body_indent_pane = new javax.swing.JPanel();
        managers_page_create_team_data_fields_pane = new javax.swing.JPanel();
        managers_page_create_team_team_name_pane = new javax.swing.JPanel();
        managers_page_create_team_team_name_label = new javax.swing.JLabel();
        managers_page_create_team_team_name_text = new javax.swing.JTextField();
        managers_page_create_team_members_pane = new javax.swing.JPanel();
        managers_page_create_team_members_label = new javax.swing.JLabel();
        managers_page_create_team_members_scrollpane = new javax.swing.JScrollPane();
        managers_page_create_teams_members_scrollpane_container = new javax.swing.JPanel();
        managers_page_create_team_members_title_pane = new javax.swing.JPanel();
        managers_page_create_team_members_list_label = new javax.swing.JLabel();
        managers_page_create_team_members_fields_title_pane = new javax.swing.JPanel();
        managers_page_create_team_members_fields_username_label = new javax.swing.JLabel();
        managers_page_create_team_members_fields_username_separator = new javax.swing.JSeparator();
        managers_page_create_team_members_fields_add_label = new javax.swing.JLabel();
        managers_page_create_team_members_fields_add_separator = new javax.swing.JSeparator();
        managers_page_create_team_members_fields_leader_label = new javax.swing.JLabel();
        managers_page_create_team_members_fields_leader_separator = new javax.swing.JSeparator();
        managers_page_create_team_members_fields_role_label = new javax.swing.JLabel();
        managers_page_create_team_actions_pane = new javax.swing.JPanel();
        managers_page_create_team_create_button = new javax.swing.JButton();
        managers_page_create_team_cancel_button = new javax.swing.JButton();
        managers_page_create_team_action_message_label = new javax.swing.JLabel();
        managers_page_manage_teams_pane = new javax.swing.JPanel();
        managers_page_manage_teams_title_pane = new javax.swing.JPanel();
        managers_page_manage_teams_title_label = new javax.swing.JLabel();
        managers_page_manage_teams_body_pane = new javax.swing.JPanel();
        managers_page_manage_teams_body_indent_pane = new javax.swing.JPanel();
        managers_page_manage_teams_data_fields_pane = new javax.swing.JPanel();
        managers_page_manage_teams_search_pane = new javax.swing.JPanel();
        managers_page_manage_teams_search_label = new javax.swing.JLabel();
        managers_page_manage_teams_search_options = new javax.swing.JComboBox<>();
        manage_teams_to_task_page_button = new javax.swing.JButton();
        manage_teams_to_team_leaders_page_button = new javax.swing.JButton();
        managers_page_remove_team_member_pane = new javax.swing.JPanel();
        managers_page_remove_team_member_label = new javax.swing.JLabel();
        managers_page_remove_team_member_options = new javax.swing.JComboBox<>();
        managers_page_remove_team_member_source_label = new javax.swing.JLabel();
        managers_page_reassign_team_leader_pane = new javax.swing.JPanel();
        managers_page_reassign_team_leader_label = new javax.swing.JLabel();
        managers_page_reassign_team_leader_options = new javax.swing.JComboBox<>();
        managers_page_reassign_team_leader_source_label = new javax.swing.JLabel();
        managers_page_add_team_member_pane = new javax.swing.JPanel();
        managers_page_manage_teams_add_member_label = new javax.swing.JLabel();
        managers_page_add_team_member_options = new javax.swing.JComboBox<>();
        managers_page_add_team_member_source_label = new javax.swing.JLabel();
        managers_page_manage_teams_reassign_leader_separator = new javax.swing.JSeparator();
        managers_page_update_team_name_pane = new javax.swing.JPanel();
        managers_page_update_team_name_label = new javax.swing.JLabel();
        managers_page_update_team_name_text = new javax.swing.JTextField();
        managers_page_delete_team_actions_pane = new javax.swing.JPanel();
        managers_page_delete_team_button = new javax.swing.JButton();
        managers_page_delete_team_message = new javax.swing.JLabel();
        managers_page_update_team_name_actions_pane = new javax.swing.JPanel();
        managers_page_update_team_name_button = new javax.swing.JButton();
        managers_page_update_team_name_message = new javax.swing.JLabel();
        managers_page_update_team_name_separator = new javax.swing.JSeparator();
        managers_page_remove_team_member_actions_pane = new javax.swing.JPanel();
        managers_page_remove_team_member_remove_button = new javax.swing.JButton();
        managers_page_remove_team_member_cancel_button = new javax.swing.JButton();
        managers_page_remove_team_member_actions_message = new javax.swing.JLabel();
        managers_page_manage_teams_remove_member_separator = new javax.swing.JSeparator();
        managers_page_add_team_member_actions_pane = new javax.swing.JPanel();
        managers_page_add_team_member_add_button = new javax.swing.JButton();
        managers_page_add_team_member_cancel_button = new javax.swing.JButton();
        managers_page_add_team_member_actions_message = new javax.swing.JLabel();
        managers_page_manage_teams_search_team_separator = new javax.swing.JSeparator();
        managers_page_reassign_team_leader_actions_pane = new javax.swing.JPanel();
        managers_page_reassign_team_leader_reassign_button = new javax.swing.JButton();
        managers_page_reassign_team_leader_cancel_button = new javax.swing.JButton();
        managers_page_reassign_team_leader_actions_message = new javax.swing.JLabel();
        managers_page_manage_teams_add_member_separator = new javax.swing.JSeparator();
        managers_page_create_task_pane = new javax.swing.JPanel();
        managers_page_create_task_title_pane = new javax.swing.JPanel();
        managers_page_create_task_title_label = new javax.swing.JLabel();
        managers_page_create_task_body_pane = new javax.swing.JPanel();
        managers_page_create_task_body_indent_pane = new javax.swing.JPanel();
        managers_page_create_task_option_pane = new javax.swing.JPanel();
        managers_page_create_task_option_label = new javax.swing.JLabel();
        managers_page_create_task_options = new javax.swing.JComboBox<>();
        managers_page_create_task_name_pane = new javax.swing.JPanel();
        managers_page_create_task_name_label = new javax.swing.JLabel();
        managers_page_create_task_name_text = new javax.swing.JTextField();
        managers_page_create_task_priority_label = new javax.swing.JLabel();
        managers_page_create_task_priority_options = new javax.swing.JComboBox<>();
        managers_page_create_task_priority_colour = new javax.swing.JPanel();
        managers_page_create_task_description_pane = new javax.swing.JPanel();
        managers_page_create_task_description_label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        managers_page_create_task_description_text = new javax.swing.JTextArea();
        managers_page_create_task_assignment_pane = new javax.swing.JPanel();
        managers_page_create_task_due_date_label = new javax.swing.JLabel();
        managers_page_create_task_due_date_text = new javax.swing.JTextField();
        managers_page_create_task_due_date_hint = new javax.swing.JLabel();
        managers_page_create_task_assignment_label = new javax.swing.JLabel();
        managers_page_create_task_assignment_options = new javax.swing.JComboBox<>();
        managers_page_create_task_choose_categories_pane = new javax.swing.JPanel();
        managers_page_create_task_choose_categories_label = new javax.swing.JLabel();
        managers_page_create_task_choose_categories_scroll_pane = new javax.swing.JScrollPane();
        managers_page_create_task_choose_categories_list = new javax.swing.JList<>();
        managers_page_create_task_categorical_separator_top = new javax.swing.JSeparator();
        managers_page_create_task_categorical_separator_bottom = new javax.swing.JSeparator();
        managers_page_create_task_choose_parent_task_pane = new javax.swing.JPanel();
        managers_page_create_task_choose_parent_task_label = new javax.swing.JLabel();
        managers_page_create_task_choose_parent_task_options = new javax.swing.JComboBox<>();
        managers_page_create_task_actions_pane = new javax.swing.JPanel();
        managers_page_create_task_create_button = new javax.swing.JButton();
        managers_page_create_task_cancel_button = new javax.swing.JButton();
        managers_page_create_task_message_label = new javax.swing.JLabel();
        create_task_recurrence_panel = new javax.swing.JPanel();
        create_task_recurrence_options = new javax.swing.JComboBox<>();
        managers_page_create_task_category_pane = new javax.swing.JPanel();
        managers_page_create_task_category_title_pane = new javax.swing.JPanel();
        managers_page_create_task_category_title_label = new javax.swing.JLabel();
        managers_page_create_task_category_body_pane = new javax.swing.JPanel();
        managers_page_create_task_category_body_indent_pane = new javax.swing.JPanel();
        managers_page_create_task_category_name_pane = new javax.swing.JPanel();
        managers_page_create_task_category_name_label = new javax.swing.JLabel();
        managers_page_create_task_category_name_text = new javax.swing.JTextField();
        managers_page_create_task_category_description_pane = new javax.swing.JPanel();
        managers_page_create_task_category_description_label = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        managers_page_create_task_category_description_text = new javax.swing.JTextArea();
        managers_page_create_task_category_assignment_pane = new javax.swing.JPanel();
        managers_page_create_task_category_assignment_label = new javax.swing.JLabel();
        managers_page_create_task_category_assignment_options = new javax.swing.JComboBox<>();
        managers_page_create_task_category_actions_pane = new javax.swing.JPanel();
        managers_page_create_task_category_create_button = new javax.swing.JButton();
        managers_page_create_task_category_cancel_button = new javax.swing.JButton();
        managers_page_create_task_category_message_label = new javax.swing.JLabel();
        managers_page_manage_users_pane = new javax.swing.JPanel();
        managers_page_create_user_title_pane = new javax.swing.JPanel();
        managers_page_create_user_title_label = new javax.swing.JLabel();
        managers_page_create_user_body_pane = new javax.swing.JPanel();
        managers_page_create_user_body_indent_pane = new javax.swing.JPanel();
        managers_page_create_user_option_pane = new javax.swing.JPanel();
        managers_page_create_user_option_label = new javax.swing.JLabel();
        managers_page_create_user_options = new javax.swing.JComboBox<>();
        managers_page_create_user_actions_pane = new javax.swing.JPanel();
        managers_page_create_user_create_button = new javax.swing.JButton();
        managers_page_create_user_cancel_button = new javax.swing.JButton();
        managers_page_create_user_message_label = new javax.swing.JLabel();
        managers_page_create_user_credentials_pane = new javax.swing.JPanel();
        managers_page_create_username_label = new javax.swing.JLabel();
        managers_page_create_username_text = new javax.swing.JTextField();
        managers_page_create_user_password_label = new javax.swing.JLabel();
        managers_page_create_user_password_text = new javax.swing.JPasswordField();
        managers_page_manager_users_separator = new javax.swing.JSeparator();
        managers_page_modify_user_body_pane = new javax.swing.JPanel();
        managers_page_modify_user_body_indent_pane = new javax.swing.JPanel();
        managers_page_modify_user_action_type_pane = new javax.swing.JPanel();
        managers_page_modify_user_action_type_label = new javax.swing.JLabel();
        managers_page_modify_user_action_options = new javax.swing.JComboBox<>();
        managers_page_modify_user_search_pane = new javax.swing.JPanel();
        managers_page_modify_user_search_username_label = new javax.swing.JLabel();
        managers_page_modify_user_search_username_options = new javax.swing.JComboBox<>();
        managers_page_modify_user_actions_pane = new javax.swing.JPanel();
        managers_page_modify_user_submit_button = new javax.swing.JButton();
        managers_page_modify_user_cancel_button = new javax.swing.JButton();
        managers_page_modify_user_message_label = new javax.swing.JLabel();
        managers_page_modify_user_edit_pane = new javax.swing.JPanel();
        managers_page_edit_username_label = new javax.swing.JLabel();
        managers_page_edit_username_text = new javax.swing.JTextField();
        managers_page_edit_password_label = new javax.swing.JLabel();
        managers_page_edit_password_text = new javax.swing.JPasswordField();
        managers_page_modify_user_option_pane = new javax.swing.JPanel();
        managers_page_modify_user_option_label = new javax.swing.JLabel();
        managers_page_modify_user_options = new javax.swing.JComboBox<>();
        managers_page_modify_user_unresolved_pane = new javax.swing.JPanel();
        managers_page_modify_user_unresolved_items_label = new javax.swing.JLabel();
        managers_page_modify_user_unresolved_team_indicator = new javax.swing.JLabel();
        managers_page_modify_user_unresolved_team_label = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        managers_page_modify_user_unresolved_tasks_list = new javax.swing.JList<>();
        managers_page_modify_user_unresolved_tasks_label = new javax.swing.JLabel();
        managers_page_modify_user_title_pane = new javax.swing.JPanel();
        managers_page_modify_user_title_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        managers_page_header_pane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        managers_page_header_label.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        managers_page_header_label.setText("Managers Page");

        managers_page_logout_button.setText("Log Out");
        managers_page_logout_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        managers_page_logout_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managers_page_logout_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout task_page_header_buttons_paneLayout = new javax.swing.GroupLayout(task_page_header_buttons_pane);
        task_page_header_buttons_pane.setLayout(task_page_header_buttons_paneLayout);
        task_page_header_buttons_paneLayout.setHorizontalGroup(
            task_page_header_buttons_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(task_page_header_buttons_paneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(managers_page_logout_button, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        task_page_header_buttons_paneLayout.setVerticalGroup(
            task_page_header_buttons_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(task_page_header_buttons_paneLayout.createSequentialGroup()
                .addComponent(managers_page_logout_button, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout managers_page_header_paneLayout = new javax.swing.GroupLayout(managers_page_header_pane);
        managers_page_header_pane.setLayout(managers_page_header_paneLayout);
        managers_page_header_paneLayout.setHorizontalGroup(
            managers_page_header_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managers_page_header_paneLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(managers_page_header_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(task_page_header_buttons_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        managers_page_header_paneLayout.setVerticalGroup(
            managers_page_header_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_header_paneLayout.createSequentialGroup()
                .addComponent(task_page_header_buttons_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(managers_page_header_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_header_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        managers_page_create_team_title_label.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        managers_page_create_team_title_label.setText("New Team");

        javax.swing.GroupLayout managers_page_create_team_title_paneLayout = new javax.swing.GroupLayout(managers_page_create_team_title_pane);
        managers_page_create_team_title_pane.setLayout(managers_page_create_team_title_paneLayout);
        managers_page_create_team_title_paneLayout.setHorizontalGroup(
            managers_page_create_team_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_title_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_team_title_label, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(670, Short.MAX_VALUE))
        );
        managers_page_create_team_title_paneLayout.setVerticalGroup(
            managers_page_create_team_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_team_title_label, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout managers_page_create_team_body_indent_paneLayout = new javax.swing.GroupLayout(managers_page_create_team_body_indent_pane);
        managers_page_create_team_body_indent_pane.setLayout(managers_page_create_team_body_indent_paneLayout);
        managers_page_create_team_body_indent_paneLayout.setHorizontalGroup(
            managers_page_create_team_body_indent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        managers_page_create_team_body_indent_paneLayout.setVerticalGroup(
            managers_page_create_team_body_indent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        managers_page_create_team_team_name_label.setText("Team Name:");

        javax.swing.GroupLayout managers_page_create_team_team_name_paneLayout = new javax.swing.GroupLayout(managers_page_create_team_team_name_pane);
        managers_page_create_team_team_name_pane.setLayout(managers_page_create_team_team_name_paneLayout);
        managers_page_create_team_team_name_paneLayout.setHorizontalGroup(
            managers_page_create_team_team_name_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_team_name_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_team_team_name_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_team_name_text, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 443, Short.MAX_VALUE))
        );
        managers_page_create_team_team_name_paneLayout.setVerticalGroup(
            managers_page_create_team_team_name_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_team_name_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(managers_page_create_team_team_name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(managers_page_create_team_team_name_text))
        );

        managers_page_create_team_members_label.setText("Team Members:");

        managers_page_create_team_members_scrollpane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        managers_page_create_teams_members_scrollpane_container.setPreferredSize(new java.awt.Dimension(100, 100));
        managers_page_create_teams_members_scrollpane_container.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        managers_page_create_team_members_title_pane.setMaximumSize(new java.awt.Dimension(565, 24));
        managers_page_create_team_members_title_pane.setName(""); // NOI18N

        managers_page_create_team_members_list_label.setText("[ list: users currently not in a team ]");

        javax.swing.GroupLayout managers_page_create_team_members_title_paneLayout = new javax.swing.GroupLayout(managers_page_create_team_members_title_pane);
        managers_page_create_team_members_title_pane.setLayout(managers_page_create_team_members_title_paneLayout);
        managers_page_create_team_members_title_paneLayout.setHorizontalGroup(
            managers_page_create_team_members_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_members_title_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_team_members_list_label)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        managers_page_create_team_members_title_paneLayout.setVerticalGroup(
            managers_page_create_team_members_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_team_members_list_label)
        );

        managers_page_create_teams_members_scrollpane_container.add(managers_page_create_team_members_title_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 565, -1));

        managers_page_create_team_members_fields_title_pane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        managers_page_create_team_members_fields_title_pane.setPreferredSize(new java.awt.Dimension(565, 24));

        managers_page_create_team_members_fields_username_label.setText("Username");
        managers_page_create_team_members_fields_username_label.setPreferredSize(new java.awt.Dimension(159, 16));

        managers_page_create_team_members_fields_username_separator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        managers_page_create_team_members_fields_add_label.setText("Add Member to Team");

        managers_page_create_team_members_fields_add_separator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        managers_page_create_team_members_fields_leader_label.setText("Assign as Leader");

        managers_page_create_team_members_fields_leader_separator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        managers_page_create_team_members_fields_role_label.setText("Current Role");

        javax.swing.GroupLayout managers_page_create_team_members_fields_title_paneLayout = new javax.swing.GroupLayout(managers_page_create_team_members_fields_title_pane);
        managers_page_create_team_members_fields_title_pane.setLayout(managers_page_create_team_members_fields_title_paneLayout);
        managers_page_create_team_members_fields_title_paneLayout.setHorizontalGroup(
            managers_page_create_team_members_fields_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_members_fields_title_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_team_members_fields_username_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_members_fields_username_separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_members_fields_add_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_members_fields_add_separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_members_fields_leader_label, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_members_fields_leader_separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_members_fields_role_label)
                .addContainerGap())
        );
        managers_page_create_team_members_fields_title_paneLayout.setVerticalGroup(
            managers_page_create_team_members_fields_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_team_members_fields_username_label, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
            .addComponent(managers_page_create_team_members_fields_username_separator)
            .addComponent(managers_page_create_team_members_fields_add_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_create_team_members_fields_add_separator)
            .addComponent(managers_page_create_team_members_fields_leader_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_create_team_members_fields_leader_separator)
            .addComponent(managers_page_create_team_members_fields_role_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_create_teams_members_scrollpane_container.add(managers_page_create_team_members_fields_title_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 22, -1, 29));

        managers_page_create_team_members_scrollpane.setViewportView(managers_page_create_teams_members_scrollpane_container);

        javax.swing.GroupLayout managers_page_create_team_members_paneLayout = new javax.swing.GroupLayout(managers_page_create_team_members_pane);
        managers_page_create_team_members_pane.setLayout(managers_page_create_team_members_paneLayout);
        managers_page_create_team_members_paneLayout.setHorizontalGroup(
            managers_page_create_team_members_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_members_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_team_members_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_members_scrollpane)
                .addContainerGap())
        );
        managers_page_create_team_members_paneLayout.setVerticalGroup(
            managers_page_create_team_members_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_members_paneLayout.createSequentialGroup()
                .addGroup(managers_page_create_team_members_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(managers_page_create_team_members_label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(managers_page_create_team_members_paneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(managers_page_create_team_members_scrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        managers_page_create_team_create_button.setText("Create Team");
        managers_page_create_team_create_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managers_page_create_team_create_buttonActionPerformed();
            }
        });

        managers_page_create_team_cancel_button.setText("Cancel");

        managers_page_create_team_action_message_label.setText("Message");

        javax.swing.GroupLayout managers_page_create_team_actions_paneLayout = new javax.swing.GroupLayout(managers_page_create_team_actions_pane);
        managers_page_create_team_actions_pane.setLayout(managers_page_create_team_actions_paneLayout);
        managers_page_create_team_actions_paneLayout.setHorizontalGroup(
            managers_page_create_team_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_actions_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_team_create_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_cancel_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_action_message_label)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        managers_page_create_team_actions_paneLayout.setVerticalGroup(
            managers_page_create_team_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_team_create_button, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
            .addComponent(managers_page_create_team_cancel_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_create_team_action_message_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout managers_page_create_team_data_fields_paneLayout = new javax.swing.GroupLayout(managers_page_create_team_data_fields_pane);
        managers_page_create_team_data_fields_pane.setLayout(managers_page_create_team_data_fields_paneLayout);
        managers_page_create_team_data_fields_paneLayout.setHorizontalGroup(
            managers_page_create_team_data_fields_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_data_fields_paneLayout.createSequentialGroup()
                .addGroup(managers_page_create_team_data_fields_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(managers_page_create_team_actions_pane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_team_members_pane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_team_team_name_pane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        managers_page_create_team_data_fields_paneLayout.setVerticalGroup(
            managers_page_create_team_data_fields_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_data_fields_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_team_team_name_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_members_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_actions_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout managers_page_create_team_body_paneLayout = new javax.swing.GroupLayout(managers_page_create_team_body_pane);
        managers_page_create_team_body_pane.setLayout(managers_page_create_team_body_paneLayout);
        managers_page_create_team_body_paneLayout.setHorizontalGroup(
            managers_page_create_team_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_body_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_team_body_indent_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_data_fields_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_create_team_body_paneLayout.setVerticalGroup(
            managers_page_create_team_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_team_body_indent_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_create_team_data_fields_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout managers_page_create_team_paneLayout = new javax.swing.GroupLayout(managers_page_create_team_pane);
        managers_page_create_team_pane.setLayout(managers_page_create_team_paneLayout);
        managers_page_create_team_paneLayout.setHorizontalGroup(
            managers_page_create_team_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(managers_page_create_team_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(managers_page_create_team_body_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(managers_page_create_team_paneLayout.createSequentialGroup()
                        .addComponent(managers_page_create_team_title_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        managers_page_create_team_paneLayout.setVerticalGroup(
            managers_page_create_team_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_team_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_team_title_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_team_body_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        managers_page_tabbed_pane.addTab("Create Team", managers_page_create_team_pane);

        managers_page_manage_teams_pane.setPreferredSize(new java.awt.Dimension(730, 499));

        managers_page_manage_teams_title_pane.setPreferredSize(new java.awt.Dimension(753, 27));

        managers_page_manage_teams_title_label.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        managers_page_manage_teams_title_label.setText("Manage Teams");

        javax.swing.GroupLayout managers_page_manage_teams_title_paneLayout = new javax.swing.GroupLayout(managers_page_manage_teams_title_pane);
        managers_page_manage_teams_title_pane.setLayout(managers_page_manage_teams_title_paneLayout);
        managers_page_manage_teams_title_paneLayout.setHorizontalGroup(
            managers_page_manage_teams_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_manage_teams_title_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_manage_teams_title_label)
                .addContainerGap(639, Short.MAX_VALUE))
        );
        managers_page_manage_teams_title_paneLayout.setVerticalGroup(
            managers_page_manage_teams_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_manage_teams_title_label, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        managers_page_manage_teams_body_pane.setPreferredSize(new java.awt.Dimension(632, 400));

        managers_page_manage_teams_body_indent_pane.setPreferredSize(new java.awt.Dimension(14, 319));

        javax.swing.GroupLayout managers_page_manage_teams_body_indent_paneLayout = new javax.swing.GroupLayout(managers_page_manage_teams_body_indent_pane);
        managers_page_manage_teams_body_indent_pane.setLayout(managers_page_manage_teams_body_indent_paneLayout);
        managers_page_manage_teams_body_indent_paneLayout.setHorizontalGroup(
            managers_page_manage_teams_body_indent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        managers_page_manage_teams_body_indent_paneLayout.setVerticalGroup(
            managers_page_manage_teams_body_indent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        managers_page_manage_teams_search_label.setText("Search Team:");

        managers_page_manage_teams_search_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[team/leader]" }));

        manage_teams_to_task_page_button.setText("to task page");
        manage_teams_to_task_page_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manage_teams_to_task_page_buttonActionPerformed();
            }
        });

        manage_teams_to_team_leaders_page_button.setText("to team leader's page");
        manage_teams_to_team_leaders_page_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manage_teams_to_team_leaders_page_buttonActionPerformed();
            }
        });

        javax.swing.GroupLayout managers_page_manage_teams_search_paneLayout = new javax.swing.GroupLayout(managers_page_manage_teams_search_pane);
        managers_page_manage_teams_search_pane.setLayout(managers_page_manage_teams_search_paneLayout);
        managers_page_manage_teams_search_paneLayout.setHorizontalGroup(
            managers_page_manage_teams_search_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_manage_teams_search_paneLayout.createSequentialGroup()
                .addComponent(managers_page_manage_teams_search_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_manage_teams_search_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(manage_teams_to_task_page_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(manage_teams_to_team_leaders_page_button))
        );
        managers_page_manage_teams_search_paneLayout.setVerticalGroup(
            managers_page_manage_teams_search_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_manage_teams_search_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_manage_teams_search_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(managers_page_manage_teams_search_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(manage_teams_to_task_page_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(manage_teams_to_team_leaders_page_button))
        );

        managers_page_remove_team_member_label.setText("Remove Member:");
        managers_page_remove_team_member_label.setPreferredSize(new java.awt.Dimension(124, 16));

        managers_page_remove_team_member_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[select getUsername]" }));

        managers_page_remove_team_member_source_label.setText("from the selected team");

        javax.swing.GroupLayout managers_page_remove_team_member_paneLayout = new javax.swing.GroupLayout(managers_page_remove_team_member_pane);
        managers_page_remove_team_member_pane.setLayout(managers_page_remove_team_member_paneLayout);
        managers_page_remove_team_member_paneLayout.setHorizontalGroup(
            managers_page_remove_team_member_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_remove_team_member_paneLayout.createSequentialGroup()
                .addComponent(managers_page_remove_team_member_label, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_remove_team_member_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_remove_team_member_source_label)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        managers_page_remove_team_member_paneLayout.setVerticalGroup(
            managers_page_remove_team_member_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_remove_team_member_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_remove_team_member_options)
            .addComponent(managers_page_remove_team_member_source_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_reassign_team_leader_label.setText("Reassign Leader:");

        managers_page_reassign_team_leader_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[select getUsername]" }));

        managers_page_reassign_team_leader_source_label.setText("from base users within the team or from users without a team");

        javax.swing.GroupLayout managers_page_reassign_team_leader_paneLayout = new javax.swing.GroupLayout(managers_page_reassign_team_leader_pane);
        managers_page_reassign_team_leader_pane.setLayout(managers_page_reassign_team_leader_paneLayout);
        managers_page_reassign_team_leader_paneLayout.setHorizontalGroup(
            managers_page_reassign_team_leader_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_reassign_team_leader_paneLayout.createSequentialGroup()
                .addComponent(managers_page_reassign_team_leader_label, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_reassign_team_leader_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_reassign_team_leader_source_label)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        managers_page_reassign_team_leader_paneLayout.setVerticalGroup(
            managers_page_reassign_team_leader_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_reassign_team_leader_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_reassign_team_leader_options)
            .addComponent(managers_page_reassign_team_leader_source_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_manage_teams_add_member_label.setText("Add Member:");

        managers_page_add_team_member_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[select getUsername]" }));

        managers_page_add_team_member_source_label.setText("from the teamless list");

        javax.swing.GroupLayout managers_page_add_team_member_paneLayout = new javax.swing.GroupLayout(managers_page_add_team_member_pane);
        managers_page_add_team_member_pane.setLayout(managers_page_add_team_member_paneLayout);
        managers_page_add_team_member_paneLayout.setHorizontalGroup(
            managers_page_add_team_member_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_add_team_member_paneLayout.createSequentialGroup()
                .addComponent(managers_page_manage_teams_add_member_label, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_add_team_member_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_add_team_member_source_label)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        managers_page_add_team_member_paneLayout.setVerticalGroup(
            managers_page_add_team_member_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_manage_teams_add_member_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_add_team_member_options)
            .addComponent(managers_page_add_team_member_source_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_update_team_name_label.setText("Team Name:");

        javax.swing.GroupLayout managers_page_update_team_name_paneLayout = new javax.swing.GroupLayout(managers_page_update_team_name_pane);
        managers_page_update_team_name_pane.setLayout(managers_page_update_team_name_paneLayout);
        managers_page_update_team_name_paneLayout.setHorizontalGroup(
            managers_page_update_team_name_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_update_team_name_paneLayout.createSequentialGroup()
                .addComponent(managers_page_update_team_name_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_update_team_name_text, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        managers_page_update_team_name_paneLayout.setVerticalGroup(
            managers_page_update_team_name_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_update_team_name_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_update_team_name_text)
        );

        managers_page_delete_team_button.setText("Delete Team");
        managers_page_delete_team_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managers_page_delete_team_buttonActionPerformed(evt);
            }
        });

        managers_page_delete_team_message.setText("Message");

        javax.swing.GroupLayout managers_page_delete_team_actions_paneLayout = new javax.swing.GroupLayout(managers_page_delete_team_actions_pane);
        managers_page_delete_team_actions_pane.setLayout(managers_page_delete_team_actions_paneLayout);
        managers_page_delete_team_actions_paneLayout.setHorizontalGroup(
            managers_page_delete_team_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_delete_team_actions_paneLayout.createSequentialGroup()
                .addComponent(managers_page_delete_team_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_delete_team_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_delete_team_actions_paneLayout.setVerticalGroup(
            managers_page_delete_team_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_delete_team_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_delete_team_button, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        managers_page_update_team_name_actions_pane.setPreferredSize(new java.awt.Dimension(226, 40));

        managers_page_update_team_name_button.setText("Update Team Name");
        managers_page_update_team_name_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managers_page_update_team_name_buttonActionPerformed(evt);
            }
        });

        managers_page_update_team_name_message.setText("Message");

        javax.swing.GroupLayout managers_page_update_team_name_actions_paneLayout = new javax.swing.GroupLayout(managers_page_update_team_name_actions_pane);
        managers_page_update_team_name_actions_pane.setLayout(managers_page_update_team_name_actions_paneLayout);
        managers_page_update_team_name_actions_paneLayout.setHorizontalGroup(
            managers_page_update_team_name_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_update_team_name_actions_paneLayout.createSequentialGroup()
                .addComponent(managers_page_update_team_name_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_update_team_name_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_update_team_name_actions_paneLayout.setVerticalGroup(
            managers_page_update_team_name_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_update_team_name_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_update_team_name_button, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        managers_page_remove_team_member_remove_button.setText("Remove Member");
        managers_page_remove_team_member_remove_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managers_page_remove_team_member_remove_buttonActionPerformed(evt);
            }
        });

        managers_page_remove_team_member_cancel_button.setText("Cancel");

        managers_page_remove_team_member_actions_message.setText("Message");

        javax.swing.GroupLayout managers_page_remove_team_member_actions_paneLayout = new javax.swing.GroupLayout(managers_page_remove_team_member_actions_pane);
        managers_page_remove_team_member_actions_pane.setLayout(managers_page_remove_team_member_actions_paneLayout);
        managers_page_remove_team_member_actions_paneLayout.setHorizontalGroup(
            managers_page_remove_team_member_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_remove_team_member_actions_paneLayout.createSequentialGroup()
                .addComponent(managers_page_remove_team_member_remove_button, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_remove_team_member_cancel_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_remove_team_member_actions_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_remove_team_member_actions_paneLayout.setVerticalGroup(
            managers_page_remove_team_member_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_remove_team_member_remove_button, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
            .addComponent(managers_page_remove_team_member_cancel_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_remove_team_member_actions_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_add_team_member_add_button.setText("Add Member");
        managers_page_add_team_member_add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managers_page_add_team_member_add_buttonActionPerformed();
            }
        });

        managers_page_add_team_member_cancel_button.setText("Cancel");

        managers_page_add_team_member_actions_message.setText("Message");

        javax.swing.GroupLayout managers_page_add_team_member_actions_paneLayout = new javax.swing.GroupLayout(managers_page_add_team_member_actions_pane);
        managers_page_add_team_member_actions_pane.setLayout(managers_page_add_team_member_actions_paneLayout);
        managers_page_add_team_member_actions_paneLayout.setHorizontalGroup(
            managers_page_add_team_member_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_add_team_member_actions_paneLayout.createSequentialGroup()
                .addComponent(managers_page_add_team_member_add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_add_team_member_cancel_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_add_team_member_actions_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_add_team_member_actions_paneLayout.setVerticalGroup(
            managers_page_add_team_member_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_add_team_member_add_button, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
            .addComponent(managers_page_add_team_member_cancel_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_add_team_member_actions_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_reassign_team_leader_reassign_button.setText("Reassign as Leader");
        managers_page_reassign_team_leader_reassign_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managers_page_reassign_team_leader_reassign_buttonActionPerformed(evt);
            }
        });

        managers_page_reassign_team_leader_cancel_button.setText("Cancel");

        managers_page_reassign_team_leader_actions_message.setText("Message");

        javax.swing.GroupLayout managers_page_reassign_team_leader_actions_paneLayout = new javax.swing.GroupLayout(managers_page_reassign_team_leader_actions_pane);
        managers_page_reassign_team_leader_actions_pane.setLayout(managers_page_reassign_team_leader_actions_paneLayout);
        managers_page_reassign_team_leader_actions_paneLayout.setHorizontalGroup(
            managers_page_reassign_team_leader_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_reassign_team_leader_actions_paneLayout.createSequentialGroup()
                .addComponent(managers_page_reassign_team_leader_reassign_button, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_reassign_team_leader_cancel_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_reassign_team_leader_actions_message, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE))
        );
        managers_page_reassign_team_leader_actions_paneLayout.setVerticalGroup(
            managers_page_reassign_team_leader_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_reassign_team_leader_reassign_button, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
            .addComponent(managers_page_reassign_team_leader_cancel_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_reassign_team_leader_actions_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout managers_page_manage_teams_data_fields_paneLayout = new javax.swing.GroupLayout(managers_page_manage_teams_data_fields_pane);
        managers_page_manage_teams_data_fields_pane.setLayout(managers_page_manage_teams_data_fields_paneLayout);
        managers_page_manage_teams_data_fields_paneLayout.setHorizontalGroup(
            managers_page_manage_teams_data_fields_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_manage_teams_search_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_remove_team_member_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_reassign_team_leader_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_add_team_member_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_manage_teams_reassign_leader_separator)
            .addComponent(managers_page_update_team_name_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_delete_team_actions_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_update_team_name_actions_pane, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
            .addComponent(managers_page_update_team_name_separator)
            .addComponent(managers_page_remove_team_member_actions_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_manage_teams_remove_member_separator)
            .addComponent(managers_page_add_team_member_actions_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_manage_teams_search_team_separator)
            .addComponent(managers_page_reassign_team_leader_actions_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_manage_teams_add_member_separator)
        );
        managers_page_manage_teams_data_fields_paneLayout.setVerticalGroup(
            managers_page_manage_teams_data_fields_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_manage_teams_data_fields_paneLayout.createSequentialGroup()
                .addComponent(managers_page_manage_teams_search_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_manage_teams_search_team_separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_remove_team_member_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_remove_team_member_actions_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_manage_teams_remove_member_separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_add_team_member_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_add_team_member_actions_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_manage_teams_add_member_separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_reassign_team_leader_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_reassign_team_leader_actions_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_manage_teams_reassign_leader_separator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_update_team_name_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_update_team_name_actions_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_update_team_name_separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_delete_team_actions_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout managers_page_manage_teams_body_paneLayout = new javax.swing.GroupLayout(managers_page_manage_teams_body_pane);
        managers_page_manage_teams_body_pane.setLayout(managers_page_manage_teams_body_paneLayout);
        managers_page_manage_teams_body_paneLayout.setHorizontalGroup(
            managers_page_manage_teams_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_manage_teams_body_paneLayout.createSequentialGroup()
                .addComponent(managers_page_manage_teams_body_indent_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_manage_teams_data_fields_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_manage_teams_body_paneLayout.setVerticalGroup(
            managers_page_manage_teams_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_manage_teams_body_indent_pane, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
            .addComponent(managers_page_manage_teams_data_fields_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout managers_page_manage_teams_paneLayout = new javax.swing.GroupLayout(managers_page_manage_teams_pane);
        managers_page_manage_teams_pane.setLayout(managers_page_manage_teams_paneLayout);
        managers_page_manage_teams_paneLayout.setHorizontalGroup(
            managers_page_manage_teams_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_manage_teams_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(managers_page_manage_teams_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(managers_page_manage_teams_title_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_manage_teams_body_pane, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        managers_page_manage_teams_paneLayout.setVerticalGroup(
            managers_page_manage_teams_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_manage_teams_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_manage_teams_title_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(managers_page_manage_teams_body_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        managers_page_tabbed_pane.addTab("Manage Teams", managers_page_manage_teams_pane);

        managers_page_create_task_title_label.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        managers_page_create_task_title_label.setText("New Task/Subtask");

        javax.swing.GroupLayout managers_page_create_task_title_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_title_pane);
        managers_page_create_task_title_pane.setLayout(managers_page_create_task_title_paneLayout);
        managers_page_create_task_title_paneLayout.setHorizontalGroup(
            managers_page_create_task_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_title_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_title_label)
                .addContainerGap(625, Short.MAX_VALUE))
        );
        managers_page_create_task_title_paneLayout.setVerticalGroup(
            managers_page_create_task_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_task_title_label, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout managers_page_create_task_body_indent_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_body_indent_pane);
        managers_page_create_task_body_indent_pane.setLayout(managers_page_create_task_body_indent_paneLayout);
        managers_page_create_task_body_indent_paneLayout.setHorizontalGroup(
            managers_page_create_task_body_indent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        managers_page_create_task_body_indent_paneLayout.setVerticalGroup(
            managers_page_create_task_body_indent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        managers_page_create_task_option_label.setText("Option:");

        managers_page_create_task_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Task", "Subtask" }));

        javax.swing.GroupLayout managers_page_create_task_option_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_option_pane);
        managers_page_create_task_option_pane.setLayout(managers_page_create_task_option_paneLayout);
        managers_page_create_task_option_paneLayout.setHorizontalGroup(
            managers_page_create_task_option_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_option_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_option_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_create_task_option_paneLayout.setVerticalGroup(
            managers_page_create_task_option_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_task_option_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_create_task_options, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        managers_page_create_task_name_label.setText("Name:");

        managers_page_create_task_priority_label.setText("Priority:");

        managers_page_create_task_priority_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "top", "second", "third", "low" }));

        managers_page_create_task_priority_colour.setBackground(new java.awt.Color(255, 0, 102));

        javax.swing.GroupLayout managers_page_create_task_priority_colourLayout = new javax.swing.GroupLayout(managers_page_create_task_priority_colour);
        managers_page_create_task_priority_colour.setLayout(managers_page_create_task_priority_colourLayout);
        managers_page_create_task_priority_colourLayout.setHorizontalGroup(
            managers_page_create_task_priority_colourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        managers_page_create_task_priority_colourLayout.setVerticalGroup(
            managers_page_create_task_priority_colourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout managers_page_create_task_name_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_name_pane);
        managers_page_create_task_name_pane.setLayout(managers_page_create_task_name_paneLayout);
        managers_page_create_task_name_paneLayout.setHorizontalGroup(
            managers_page_create_task_name_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_name_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_name_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_name_text, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(managers_page_create_task_priority_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_priority_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_priority_colour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        managers_page_create_task_name_paneLayout.setVerticalGroup(
            managers_page_create_task_name_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_task_name_text)
            .addComponent(managers_page_create_task_name_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(managers_page_create_task_name_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(managers_page_create_task_priority_label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(managers_page_create_task_priority_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(managers_page_create_task_priority_colour, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_create_task_description_label.setText("Description:");

        managers_page_create_task_description_text.setColumns(20);
        managers_page_create_task_description_text.setRows(5);
        jScrollPane1.setViewportView(managers_page_create_task_description_text);

        javax.swing.GroupLayout managers_page_create_task_description_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_description_pane);
        managers_page_create_task_description_pane.setLayout(managers_page_create_task_description_paneLayout);
        managers_page_create_task_description_paneLayout.setHorizontalGroup(
            managers_page_create_task_description_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_description_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_description_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        managers_page_create_task_description_paneLayout.setVerticalGroup(
            managers_page_create_task_description_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_description_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_task_description_label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );

        managers_page_create_task_due_date_label.setText("Due Date:");

        managers_page_create_task_due_date_hint.setText("mm/dd/yyyy");

        managers_page_create_task_assignment_label.setText("Assign to:");

        managers_page_create_task_assignment_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "team/leader" }));

        javax.swing.GroupLayout managers_page_create_task_assignment_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_assignment_pane);
        managers_page_create_task_assignment_pane.setLayout(managers_page_create_task_assignment_paneLayout);
        managers_page_create_task_assignment_paneLayout.setHorizontalGroup(
            managers_page_create_task_assignment_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_assignment_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_due_date_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_due_date_text, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_due_date_hint)
                .addGap(18, 18, 18)
                .addComponent(managers_page_create_task_assignment_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_assignment_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_create_task_assignment_paneLayout.setVerticalGroup(
            managers_page_create_task_assignment_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_task_due_date_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(managers_page_create_task_assignment_paneLayout.createSequentialGroup()
                .addGroup(managers_page_create_task_assignment_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, managers_page_create_task_assignment_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(managers_page_create_task_due_date_hint, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(managers_page_create_task_assignment_label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(managers_page_create_task_assignment_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(managers_page_create_task_due_date_text, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        managers_page_create_task_choose_categories_label.setText("Choose Category(s):");

        managers_page_create_task_choose_categories_list.setModel(new javax.swing.DefaultListModel());
        managers_page_create_task_choose_categories_scroll_pane.setViewportView(managers_page_create_task_choose_categories_list);

        javax.swing.GroupLayout managers_page_create_task_choose_categories_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_choose_categories_pane);
        managers_page_create_task_choose_categories_pane.setLayout(managers_page_create_task_choose_categories_paneLayout);
        managers_page_create_task_choose_categories_paneLayout.setHorizontalGroup(
            managers_page_create_task_choose_categories_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_choose_categories_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_choose_categories_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_choose_categories_scroll_pane)
                .addContainerGap())
        );
        managers_page_create_task_choose_categories_paneLayout.setVerticalGroup(
            managers_page_create_task_choose_categories_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_choose_categories_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_task_choose_categories_label)
                .addContainerGap(77, Short.MAX_VALUE))
            .addComponent(managers_page_create_task_choose_categories_scroll_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        managers_page_create_task_choose_parent_task_label.setText("Choose Parent Task:");

        javax.swing.GroupLayout managers_page_create_task_choose_parent_task_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_choose_parent_task_pane);
        managers_page_create_task_choose_parent_task_pane.setLayout(managers_page_create_task_choose_parent_task_paneLayout);
        managers_page_create_task_choose_parent_task_paneLayout.setHorizontalGroup(
            managers_page_create_task_choose_parent_task_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_choose_parent_task_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_choose_parent_task_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_choose_parent_task_options, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );
        managers_page_create_task_choose_parent_task_paneLayout.setVerticalGroup(
            managers_page_create_task_choose_parent_task_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_task_choose_parent_task_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_create_task_choose_parent_task_options)
        );

        managers_page_create_task_create_button.setText("Create");
        managers_page_create_task_create_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managers_page_create_task_create_buttonActionPerformed();
            }
        });

        managers_page_create_task_cancel_button.setText("Cancel");

        managers_page_create_task_message_label.setText("Message");

        javax.swing.GroupLayout managers_page_create_task_actions_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_actions_pane);
        managers_page_create_task_actions_pane.setLayout(managers_page_create_task_actions_paneLayout);
        managers_page_create_task_actions_paneLayout.setHorizontalGroup(
            managers_page_create_task_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_actions_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_task_create_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_cancel_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_message_label)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        managers_page_create_task_actions_paneLayout.setVerticalGroup(
            managers_page_create_task_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_task_create_button, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
            .addComponent(managers_page_create_task_cancel_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_create_task_message_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        create_task_recurrence_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "non-recurrent", "weekly", "monthly" }));

        javax.swing.GroupLayout create_task_recurrence_panelLayout = new javax.swing.GroupLayout(create_task_recurrence_panel);
        create_task_recurrence_panel.setLayout(create_task_recurrence_panelLayout);
        create_task_recurrence_panelLayout.setHorizontalGroup(
            create_task_recurrence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(create_task_recurrence_panelLayout.createSequentialGroup()
                .addComponent(create_task_recurrence_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        create_task_recurrence_panelLayout.setVerticalGroup(
            create_task_recurrence_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(create_task_recurrence_options)
        );

        javax.swing.GroupLayout managers_page_create_task_body_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_body_pane);
        managers_page_create_task_body_pane.setLayout(managers_page_create_task_body_paneLayout);
        managers_page_create_task_body_paneLayout.setHorizontalGroup(
            managers_page_create_task_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_body_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_task_body_indent_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(managers_page_create_task_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(managers_page_create_task_option_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_task_name_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_task_description_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_task_choose_categories_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_task_categorical_separator_top)
                    .addComponent(managers_page_create_task_choose_parent_task_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_task_categorical_separator_bottom, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(managers_page_create_task_actions_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_task_assignment_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(create_task_recurrence_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        managers_page_create_task_body_paneLayout.setVerticalGroup(
            managers_page_create_task_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_task_body_indent_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(managers_page_create_task_body_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_option_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_create_task_name_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_description_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_assignment_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(create_task_recurrence_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_categorical_separator_top, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_choose_categories_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_choose_parent_task_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_create_task_categorical_separator_bottom, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_actions_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout managers_page_create_task_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_pane);
        managers_page_create_task_pane.setLayout(managers_page_create_task_paneLayout);
        managers_page_create_task_paneLayout.setHorizontalGroup(
            managers_page_create_task_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, managers_page_create_task_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(managers_page_create_task_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(managers_page_create_task_title_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_task_body_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        managers_page_create_task_paneLayout.setVerticalGroup(
            managers_page_create_task_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_title_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_body_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        managers_page_tabbed_pane.addTab("Create Task", managers_page_create_task_pane);

        managers_page_create_task_category_title_label.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        managers_page_create_task_category_title_label.setText("New Task Category");

        javax.swing.GroupLayout managers_page_create_task_category_title_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_category_title_pane);
        managers_page_create_task_category_title_pane.setLayout(managers_page_create_task_category_title_paneLayout);
        managers_page_create_task_category_title_paneLayout.setHorizontalGroup(
            managers_page_create_task_category_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_category_title_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_category_title_label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_create_task_category_title_paneLayout.setVerticalGroup(
            managers_page_create_task_category_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_task_category_title_label, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout managers_page_create_task_category_body_indent_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_category_body_indent_pane);
        managers_page_create_task_category_body_indent_pane.setLayout(managers_page_create_task_category_body_indent_paneLayout);
        managers_page_create_task_category_body_indent_paneLayout.setHorizontalGroup(
            managers_page_create_task_category_body_indent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        managers_page_create_task_category_body_indent_paneLayout.setVerticalGroup(
            managers_page_create_task_category_body_indent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        managers_page_create_task_category_name_label.setText("Name:");

        javax.swing.GroupLayout managers_page_create_task_category_name_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_category_name_pane);
        managers_page_create_task_category_name_pane.setLayout(managers_page_create_task_category_name_paneLayout);
        managers_page_create_task_category_name_paneLayout.setHorizontalGroup(
            managers_page_create_task_category_name_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_category_name_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_category_name_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_category_name_text, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                .addContainerGap(286, Short.MAX_VALUE))
        );
        managers_page_create_task_category_name_paneLayout.setVerticalGroup(
            managers_page_create_task_category_name_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_task_category_name_text, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
            .addComponent(managers_page_create_task_category_name_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_create_task_category_description_label.setText("Description:");

        managers_page_create_task_category_description_text.setColumns(20);
        managers_page_create_task_category_description_text.setRows(5);
        jScrollPane3.setViewportView(managers_page_create_task_category_description_text);

        javax.swing.GroupLayout managers_page_create_task_category_description_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_category_description_pane);
        managers_page_create_task_category_description_pane.setLayout(managers_page_create_task_category_description_paneLayout);
        managers_page_create_task_category_description_paneLayout.setHorizontalGroup(
            managers_page_create_task_category_description_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_category_description_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_category_description_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        managers_page_create_task_category_description_paneLayout.setVerticalGroup(
            managers_page_create_task_category_description_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_category_description_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_task_category_description_label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
        );

        managers_page_create_task_category_assignment_label.setText("Assign to:");

        managers_page_create_task_category_assignment_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "team" }));

        javax.swing.GroupLayout managers_page_create_task_category_assignment_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_category_assignment_pane);
        managers_page_create_task_category_assignment_pane.setLayout(managers_page_create_task_category_assignment_paneLayout);
        managers_page_create_task_category_assignment_paneLayout.setHorizontalGroup(
            managers_page_create_task_category_assignment_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_category_assignment_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_category_assignment_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_category_assignment_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_create_task_category_assignment_paneLayout.setVerticalGroup(
            managers_page_create_task_category_assignment_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_category_assignment_paneLayout.createSequentialGroup()
                .addGroup(managers_page_create_task_category_assignment_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(managers_page_create_task_category_assignment_label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(managers_page_create_task_category_assignment_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        managers_page_create_task_category_create_button.setText("Create Task Category");
        managers_page_create_task_category_create_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managers_page_create_task_category_create_buttonActionPerformed();
            }
        });

        managers_page_create_task_category_cancel_button.setText("Cancel");

        managers_page_create_task_category_message_label.setText("Message");

        javax.swing.GroupLayout managers_page_create_task_category_actions_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_category_actions_pane);
        managers_page_create_task_category_actions_pane.setLayout(managers_page_create_task_category_actions_paneLayout);
        managers_page_create_task_category_actions_paneLayout.setHorizontalGroup(
            managers_page_create_task_category_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_category_actions_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_task_category_create_button, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_category_cancel_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_category_message_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_create_task_category_actions_paneLayout.setVerticalGroup(
            managers_page_create_task_category_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_task_category_create_button, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
            .addComponent(managers_page_create_task_category_cancel_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_create_task_category_message_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout managers_page_create_task_category_body_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_category_body_pane);
        managers_page_create_task_category_body_pane.setLayout(managers_page_create_task_category_body_paneLayout);
        managers_page_create_task_category_body_paneLayout.setHorizontalGroup(
            managers_page_create_task_category_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_category_body_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_task_category_body_indent_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(managers_page_create_task_category_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(managers_page_create_task_category_name_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_task_category_description_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_task_category_assignment_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_task_category_actions_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        managers_page_create_task_category_body_paneLayout.setVerticalGroup(
            managers_page_create_task_category_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_task_category_body_indent_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(managers_page_create_task_category_body_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_category_name_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_category_description_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_category_assignment_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_category_actions_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout managers_page_create_task_category_paneLayout = new javax.swing.GroupLayout(managers_page_create_task_category_pane);
        managers_page_create_task_category_pane.setLayout(managers_page_create_task_category_paneLayout);
        managers_page_create_task_category_paneLayout.setHorizontalGroup(
            managers_page_create_task_category_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_category_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(managers_page_create_task_category_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(managers_page_create_task_category_body_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_task_category_title_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        managers_page_create_task_category_paneLayout.setVerticalGroup(
            managers_page_create_task_category_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_task_category_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_task_category_title_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_task_category_body_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        managers_page_tabbed_pane.addTab("Create Task Category", managers_page_create_task_category_pane);

        managers_page_create_user_title_label.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        managers_page_create_user_title_label.setText("New User");

        javax.swing.GroupLayout managers_page_create_user_title_paneLayout = new javax.swing.GroupLayout(managers_page_create_user_title_pane);
        managers_page_create_user_title_pane.setLayout(managers_page_create_user_title_paneLayout);
        managers_page_create_user_title_paneLayout.setHorizontalGroup(
            managers_page_create_user_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_user_title_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_user_title_label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_create_user_title_paneLayout.setVerticalGroup(
            managers_page_create_user_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_user_title_label, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout managers_page_create_user_body_indent_paneLayout = new javax.swing.GroupLayout(managers_page_create_user_body_indent_pane);
        managers_page_create_user_body_indent_pane.setLayout(managers_page_create_user_body_indent_paneLayout);
        managers_page_create_user_body_indent_paneLayout.setHorizontalGroup(
            managers_page_create_user_body_indent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        managers_page_create_user_body_indent_paneLayout.setVerticalGroup(
            managers_page_create_user_body_indent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        managers_page_create_user_option_label.setText("User Type:");

        managers_page_create_user_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Base User", "Manager" }));

        javax.swing.GroupLayout managers_page_create_user_option_paneLayout = new javax.swing.GroupLayout(managers_page_create_user_option_pane);
        managers_page_create_user_option_pane.setLayout(managers_page_create_user_option_paneLayout);
        managers_page_create_user_option_paneLayout.setHorizontalGroup(
            managers_page_create_user_option_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_user_option_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_user_option_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_user_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_create_user_option_paneLayout.setVerticalGroup(
            managers_page_create_user_option_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_user_option_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_create_user_options, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        managers_page_create_user_create_button.setText("Create User");
        managers_page_create_user_create_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managers_page_create_user_create_buttonActionPerformed(evt);
            }
        });

        managers_page_create_user_cancel_button.setText("Cancel");

        managers_page_create_user_message_label.setText("Message");

        javax.swing.GroupLayout managers_page_create_user_actions_paneLayout = new javax.swing.GroupLayout(managers_page_create_user_actions_pane);
        managers_page_create_user_actions_pane.setLayout(managers_page_create_user_actions_paneLayout);
        managers_page_create_user_actions_paneLayout.setHorizontalGroup(
            managers_page_create_user_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_user_actions_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_user_create_button, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_user_cancel_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_user_message_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_create_user_actions_paneLayout.setVerticalGroup(
            managers_page_create_user_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_user_create_button, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
            .addComponent(managers_page_create_user_cancel_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_create_user_message_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_create_username_label.setText("Username:");

        managers_page_create_user_password_label.setText("Password:");

        javax.swing.GroupLayout managers_page_create_user_credentials_paneLayout = new javax.swing.GroupLayout(managers_page_create_user_credentials_pane);
        managers_page_create_user_credentials_pane.setLayout(managers_page_create_user_credentials_paneLayout);
        managers_page_create_user_credentials_paneLayout.setHorizontalGroup(
            managers_page_create_user_credentials_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_user_credentials_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_username_label, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_username_text, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125)
                .addComponent(managers_page_create_user_password_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_user_password_text, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_create_user_credentials_paneLayout.setVerticalGroup(
            managers_page_create_user_credentials_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_username_text, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
            .addComponent(managers_page_create_username_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_create_user_password_text)
            .addComponent(managers_page_create_user_password_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout managers_page_create_user_body_paneLayout = new javax.swing.GroupLayout(managers_page_create_user_body_pane);
        managers_page_create_user_body_pane.setLayout(managers_page_create_user_body_paneLayout);
        managers_page_create_user_body_paneLayout.setHorizontalGroup(
            managers_page_create_user_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_create_user_body_paneLayout.createSequentialGroup()
                .addComponent(managers_page_create_user_body_indent_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(managers_page_create_user_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(managers_page_create_user_option_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_user_actions_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_user_credentials_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        managers_page_create_user_body_paneLayout.setVerticalGroup(
            managers_page_create_user_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_create_user_body_indent_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(managers_page_create_user_body_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_user_option_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_user_credentials_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_user_actions_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout managers_page_modify_user_body_indent_paneLayout = new javax.swing.GroupLayout(managers_page_modify_user_body_indent_pane);
        managers_page_modify_user_body_indent_pane.setLayout(managers_page_modify_user_body_indent_paneLayout);
        managers_page_modify_user_body_indent_paneLayout.setHorizontalGroup(
            managers_page_modify_user_body_indent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        managers_page_modify_user_body_indent_paneLayout.setVerticalGroup(
            managers_page_modify_user_body_indent_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        managers_page_modify_user_action_type_label.setText("Action:");

        managers_page_modify_user_action_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Edit", "Delete" }));

        javax.swing.GroupLayout managers_page_modify_user_action_type_paneLayout = new javax.swing.GroupLayout(managers_page_modify_user_action_type_pane);
        managers_page_modify_user_action_type_pane.setLayout(managers_page_modify_user_action_type_paneLayout);
        managers_page_modify_user_action_type_paneLayout.setHorizontalGroup(
            managers_page_modify_user_action_type_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_modify_user_action_type_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_modify_user_action_type_label, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_modify_user_action_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_modify_user_action_type_paneLayout.setVerticalGroup(
            managers_page_modify_user_action_type_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_modify_user_action_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(managers_page_modify_user_action_type_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_modify_user_search_username_label.setText("Search Username:");

        managers_page_modify_user_search_username_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[usernames]" }));

        javax.swing.GroupLayout managers_page_modify_user_search_paneLayout = new javax.swing.GroupLayout(managers_page_modify_user_search_pane);
        managers_page_modify_user_search_pane.setLayout(managers_page_modify_user_search_paneLayout);
        managers_page_modify_user_search_paneLayout.setHorizontalGroup(
            managers_page_modify_user_search_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_modify_user_search_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_modify_user_search_username_label, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_modify_user_search_username_options, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_modify_user_search_paneLayout.setVerticalGroup(
            managers_page_modify_user_search_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_modify_user_search_paneLayout.createSequentialGroup()
                .addGroup(managers_page_modify_user_search_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(managers_page_modify_user_search_username_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(managers_page_modify_user_search_username_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        managers_page_modify_user_submit_button.setText("Submit");
        managers_page_modify_user_submit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managers_page_modify_user_submit_buttonActionPerformed(evt);
            }
        });

        managers_page_modify_user_cancel_button.setText("Cancel");

        managers_page_modify_user_message_label.setText("Message");

        javax.swing.GroupLayout managers_page_modify_user_actions_paneLayout = new javax.swing.GroupLayout(managers_page_modify_user_actions_pane);
        managers_page_modify_user_actions_pane.setLayout(managers_page_modify_user_actions_paneLayout);
        managers_page_modify_user_actions_paneLayout.setHorizontalGroup(
            managers_page_modify_user_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_modify_user_actions_paneLayout.createSequentialGroup()
                .addComponent(managers_page_modify_user_submit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_modify_user_cancel_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_modify_user_message_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_modify_user_actions_paneLayout.setVerticalGroup(
            managers_page_modify_user_actions_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_modify_user_submit_button, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
            .addComponent(managers_page_modify_user_cancel_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(managers_page_modify_user_message_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_edit_username_label.setText("Edit Username:");

        managers_page_edit_password_label.setText("Edit Password:");

        javax.swing.GroupLayout managers_page_modify_user_edit_paneLayout = new javax.swing.GroupLayout(managers_page_modify_user_edit_pane);
        managers_page_modify_user_edit_pane.setLayout(managers_page_modify_user_edit_paneLayout);
        managers_page_modify_user_edit_paneLayout.setHorizontalGroup(
            managers_page_modify_user_edit_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_modify_user_edit_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_edit_username_label, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_edit_username_text, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(managers_page_edit_password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_edit_password_text, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        managers_page_modify_user_edit_paneLayout.setVerticalGroup(
            managers_page_modify_user_edit_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_edit_password_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(managers_page_modify_user_edit_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(managers_page_edit_username_label, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addComponent(managers_page_edit_username_text, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
            .addComponent(managers_page_edit_password_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_modify_user_option_label.setText("Choose Type:");

        managers_page_modify_user_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Base User", "Team Leader", "Manager" }));

        javax.swing.GroupLayout managers_page_modify_user_option_paneLayout = new javax.swing.GroupLayout(managers_page_modify_user_option_pane);
        managers_page_modify_user_option_pane.setLayout(managers_page_modify_user_option_paneLayout);
        managers_page_modify_user_option_paneLayout.setHorizontalGroup(
            managers_page_modify_user_option_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_modify_user_option_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_modify_user_option_label, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_modify_user_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_modify_user_option_paneLayout.setVerticalGroup(
            managers_page_modify_user_option_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_modify_user_options, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(managers_page_modify_user_option_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        managers_page_modify_user_unresolved_items_label.setText("Unresolved Items:");

        managers_page_modify_user_unresolved_team_indicator.setText("Leading Team:");

        managers_page_modify_user_unresolved_team_label.setText("not a team leader");

        managers_page_modify_user_unresolved_tasks_list.setModel(new javax.swing.DefaultListModel());
        jScrollPane4.setViewportView(managers_page_modify_user_unresolved_tasks_list);

        managers_page_modify_user_unresolved_tasks_label.setText("[Assigned Tasks]");

        javax.swing.GroupLayout managers_page_modify_user_unresolved_paneLayout = new javax.swing.GroupLayout(managers_page_modify_user_unresolved_pane);
        managers_page_modify_user_unresolved_pane.setLayout(managers_page_modify_user_unresolved_paneLayout);
        managers_page_modify_user_unresolved_paneLayout.setHorizontalGroup(
            managers_page_modify_user_unresolved_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_modify_user_unresolved_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(managers_page_modify_user_unresolved_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(managers_page_modify_user_unresolved_paneLayout.createSequentialGroup()
                        .addComponent(managers_page_modify_user_unresolved_items_label, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(managers_page_modify_user_unresolved_team_indicator, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(managers_page_modify_user_unresolved_team_label, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(managers_page_modify_user_unresolved_paneLayout.createSequentialGroup()
                        .addComponent(managers_page_modify_user_unresolved_tasks_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(594, 594, 594))))
        );
        managers_page_modify_user_unresolved_paneLayout.setVerticalGroup(
            managers_page_modify_user_unresolved_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(managers_page_modify_user_unresolved_paneLayout.createSequentialGroup()
                .addGroup(managers_page_modify_user_unresolved_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(managers_page_modify_user_unresolved_team_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(managers_page_modify_user_unresolved_paneLayout.createSequentialGroup()
                        .addComponent(managers_page_modify_user_unresolved_items_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(managers_page_modify_user_unresolved_tasks_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(managers_page_modify_user_unresolved_team_indicator, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout managers_page_modify_user_body_paneLayout = new javax.swing.GroupLayout(managers_page_modify_user_body_pane);
        managers_page_modify_user_body_pane.setLayout(managers_page_modify_user_body_paneLayout);
        managers_page_modify_user_body_paneLayout.setHorizontalGroup(
            managers_page_modify_user_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_modify_user_body_paneLayout.createSequentialGroup()
                .addComponent(managers_page_modify_user_body_indent_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(managers_page_modify_user_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(managers_page_modify_user_action_type_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_modify_user_actions_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_modify_user_edit_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_modify_user_option_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_modify_user_unresolved_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_modify_user_search_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        managers_page_modify_user_body_paneLayout.setVerticalGroup(
            managers_page_modify_user_body_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_modify_user_body_indent_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(managers_page_modify_user_body_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_modify_user_action_type_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_modify_user_option_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_modify_user_search_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(managers_page_modify_user_edit_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_modify_user_unresolved_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_modify_user_actions_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        managers_page_modify_user_title_label.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        managers_page_modify_user_title_label.setText("Modify User");

        javax.swing.GroupLayout managers_page_modify_user_title_paneLayout = new javax.swing.GroupLayout(managers_page_modify_user_title_pane);
        managers_page_modify_user_title_pane.setLayout(managers_page_modify_user_title_paneLayout);
        managers_page_modify_user_title_paneLayout.setHorizontalGroup(
            managers_page_modify_user_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_modify_user_title_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_modify_user_title_label)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        managers_page_modify_user_title_paneLayout.setVerticalGroup(
            managers_page_modify_user_title_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_modify_user_title_label, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout managers_page_manage_users_paneLayout = new javax.swing.GroupLayout(managers_page_manage_users_pane);
        managers_page_manage_users_pane.setLayout(managers_page_manage_users_paneLayout);
        managers_page_manage_users_paneLayout.setHorizontalGroup(
            managers_page_manage_users_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_manage_users_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(managers_page_manage_users_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(managers_page_modify_user_title_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_manager_users_separator, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(managers_page_create_user_title_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_create_user_body_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(managers_page_modify_user_body_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        managers_page_manage_users_paneLayout.setVerticalGroup(
            managers_page_manage_users_paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managers_page_manage_users_paneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managers_page_create_user_title_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_create_user_body_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_manager_users_separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_modify_user_title_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managers_page_modify_user_body_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        managers_page_tabbed_pane.addTab("Manage Users", managers_page_manage_users_pane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managers_page_header_pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(managers_page_tabbed_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(managers_page_header_pane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(managers_page_tabbed_pane, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    private void __init_tab_change_response__() {
        this.list_teamless_members();
        
        final ManagersPage self = this;
        
        javax.swing.event.ChangeListener change_listener = new javax.swing.event.ChangeListener() {
            @Override
            public void stateChanged(@NotNull javax.swing.event.ChangeEvent changeEvent) {
                javax.swing.JTabbedPane tab_pane = (javax.swing.JTabbedPane) changeEvent.getSource();
                String tab_name = tab_pane.getTitleAt(tab_pane.getSelectedIndex());

                switch (tab_name) {
                    case "Create Team":
                        self.list_teamless_members();
                        break;
                    case "Manage Teams":
                        self.manage_teams_load_teams();
                        break;
                    case "Create Task":
                        self.create_task_reset_task_options();
                        break;
                    case "Create Task Category":
                        self.create_category_reload_team_options();
                        break;
                    case "Manage Users":
                        self.modifcation_section_load_users(true);
                        break;
                    default:
                        System.out.println("ERROR: No tab is called '"
                            + tab_name + " in manager's page!");
                        break;
                }
                
            }
        };
        this.managers_page_tabbed_pane.addChangeListener(change_listener);
        
    }
    
    
    
    // ------------------------ TEAM CREATION SECTION -------------------------
    
    /*
        Function to list all users who are not in a team:
    */
    public void list_teamless_members() {
        // Clear local records:
        for (TeamlessMemberPanel member_panel: this._teamless_member_map.values()) this.managers_page_create_teams_members_scrollpane_container.remove(member_panel);
        this._teamless_member_map.clear();
        this._teamless_member_button_group = new javax.swing.ButtonGroup();
        this.managers_page_create_team_action_message_label.setText("");
        
        boolean user_data_retrieved = true;
        DBConnection.connect();
        ResultSet rs = DBConnection.query("SELECT USERNAME, MEMBER_ROLE FROM MEMBERS WHERE TEAM_ID IS NULL AND MEMBER_ROLE != 'Manager' AND DELETED != 'Y'");
        try {
            while (rs.next()) {
                // Process data from the query.
                // 1. for each query record:
                // create an AppUser instance,
                // store the username and user_role
                AppUser user = new AppUser();
                user.setUsername(rs.getString("USERNAME"));
                user.setRole( AppUser.toUserType(rs.getString("MEMBER_ROLE")) );
                
                // 2. create a TeamlessMemberPanel instance,
                // use the AppUser instance as parameter to its constructor:
                TeamlessMemberPanel panel = new TeamlessMemberPanel(user);
                // 3. put the TeamlessMemberPanel instance into the tree
                // this._teamless_member_map, using getUsername as the key:
                this._teamless_member_map.put(user.getUsername(), panel);
                
            }
        } catch (Exception e) {
            e.printStackTrace();
            user_data_retrieved = false;
        }
        DBConnection.disconnect();
        
        // Log message to the UI if the query fails, using the following code:
        if (!user_data_retrieved) this.managers_page_create_team_action_message_label.setText("Failed to load user data.");
            
        
        // Display all teamless members in the UI:
        int default_height = this.managers_page_create_team_members_scrollpane.getHeight();
        int base_height = 50;
        int i = 0;
        TeamlessMemberPanel member_panel = null;
        for (Map.Entry<String, TeamlessMemberPanel> entry: this._teamless_member_map.entrySet()) {
            member_panel = entry.getValue();
            this.managers_page_create_teams_members_scrollpane_container.add(member_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, base_height + i * member_panel.getPreferredSize().height, -1, -1));
            this._teamless_member_button_group.add(member_panel.appoint_leader_button());
            ++i;
        }
        if (0 < i && this.managers_page_create_teams_members_scrollpane_container.getPreferredSize().height < base_height + i * member_panel.getPreferredSize().height)
            this.managers_page_create_teams_members_scrollpane_container.setPreferredSize(new java.awt.Dimension(100, base_height + i * member_panel.getPreferredSize().height));
        else
            this.managers_page_create_teams_members_scrollpane_container.setPreferredSize(new java.awt.Dimension(100, default_height));
        
        this.managers_page_create_teams_members_scrollpane_container.revalidate();
        this.managers_page_create_teams_members_scrollpane_container.repaint();
        
    }
    
    
    /*
        Function to create a team when the create-team button is clicked (and released):
    */
    private void managers_page_create_team_create_buttonActionPerformed() {
        //GEN-FIRST:event_managers_page_create_team_create_buttonActionPerformed
        // Collect data from the UI:
        String leader_username = null;
        List<String> other_member_usernames = new ArrayList<>();

        // 1. get team name:
        String team_name = this.managers_page_create_team_team_name_text.getText();
        // 2. extract selected usernames (including the leader)
        for (Map.Entry<String, TeamlessMemberPanel> entry : this._teamless_member_map.entrySet()) {
            if (entry.getValue().appoint_leader_button().isSelected())    leader_username = entry.getKey();           // leader radio button selected
            else if (entry.getValue().add_member_checkbox().isSelected()) other_member_usernames.add(entry.getKey()); // member checkbox selected
        }


        // Validate data: Make sure team_name is okay. Check if leader_username is null.
        if (team_name.length() == 0) { this.managers_page_create_team_action_message_label.setText("No team name entered."); return; }
        if (leader_username == null) { this.managers_page_create_team_action_message_label.setText("You must appoint a leader to the new team!"); return; }
        
        // Insert team data into database:
        int leadID;
        DBConnection.connect();
        DBConnection.transaction(DBConnection.Transaction.BEGIN);

        // 1. query the member_ID of the leader by his getUsername:
        PreparedStatement ps = DBConnection.prepared_statement("SELECT MEMBER_ID FROM MEMBERS WHERE USERNAME = ? AND DELETED != 'Y'");
        DBConnection.set_statement_value(ps, 1, leader_username);
        ResultSet rs = DBConnection.execute_query(ps);
        try {
            assert rs != null;
            rs.next();
            leadID = rs.getInt("MEMBER_ID");
        } catch (Exception e) {
            this.managers_page_create_team_action_message_label.setText("Failed to retrieve new leader ID.");
            DBConnection.transaction(DBConnection.Transaction.ROLLBACK);
            DBConnection.transaction(DBConnection.Transaction.END);
            DBConnection.disconnect(); return;
        }

        // 2. insert a new Team record into the database with team ID and leader ID:
        boolean team_created;
        ps = DBConnection.prepared_statement("INSERT INTO TEAMS (TEAM_ID, TEAM_LEADER_ID) VALUES (?,?)");
        team_created = (ps != null)
                    && DBConnection.set_statement_value(ps, 1, team_name)
                    && DBConnection.set_statement_value(ps, 2, leadID)
                    && DBConnection.execute_update(ps);
        if (!team_created) { 
            this.managers_page_create_team_action_message_label.setText("Team creation failed."); 
            DBConnection.transaction(DBConnection.Transaction.ROLLBACK);
            DBConnection.transaction(DBConnection.Transaction.END);
            DBConnection.disconnect(); return;
        }
        
        // 3. update all selected base users' team ID's to "team_name", whose usernames were stored in "other_member_usernames":
        ps = DBConnection.prepared_statement("UPDATE MEMBERS SET TEAM_ID = ? WHERE USERNAME = ? AND DELETED != 'Y'");
        team_created = (ps != null);
        for(String username: other_member_usernames) {
            if (!team_created) break;

            team_created = DBConnection.set_statement_value(ps, 1, team_name)
                        && DBConnection.set_statement_value(ps, 2, username)
                        && DBConnection.execute_update(ps, true);
        }

        ps = DBConnection.prepared_statement("UPDATE MEMBERS SET MEMBER_ROLE = ?, TEAM_ID = ? WHERE USERNAME = ? AND DELETED != 'Y'");
        team_created = (team_created && ps != null)
                    && DBConnection.set_statement_value(ps, 1, AppUser.userTypeToString(AppUser.UserType.TEAM_LEAD))
                    && DBConnection.set_statement_value(ps, 2, team_name)
                    && DBConnection.set_statement_value(ps, 3, leader_username)
                    && DBConnection.execute_update(ps, true);
            
        if (!team_created) {
            this.managers_page_create_team_action_message_label.setText(
                "Failed to update team members.");
            DBConnection.transaction(DBConnection.Transaction.ROLLBACK);    
        }
        
        DBConnection.transaction(DBConnection.Transaction.END);
        DBConnection.disconnect();

        
        // If the insert and update are successful, log a message to indicate that the team has been created:
        if (!team_created) return;
        this.list_teamless_members(); // reload the team creation tab
        this.managers_page_create_team_team_name_text.setText("");
        this.managers_page_create_team_action_message_label.setText("Team successfully created.");
        
    }//GEN-LAST:event_managers_page_create_team_create_buttonActionPerformed

    
    
    // -------------------- TASK CATEGORY CREATION SECTION --------------------
    
    /*
        Function to obtain all team names upon entering the tab "Create Task Category":
    */
    public void create_category_reload_team_options() {
        
        // Reset the team selection options
        this.managers_page_create_task_category_assignment_options.removeAllItems();
        this.managers_page_create_task_category_assignment_options.addItem("[select team]");
        
        //Query all team ID's from the database:
        DBConnection.connect();
        ResultSet rs = DBConnection.query("SELECT TEAM_ID FROM TEAMS WHERE DELETED != 'Y'");
        try {
            while (rs.next()) this.managers_page_create_task_category_assignment_options.addItem(rs.getString("TEAM_ID"));
        } catch (Exception e) {
            e.printStackTrace();
            this.managers_page_create_task_category_message_label.setText("Team information was not loaded properly. Please reload.");
        }
        DBConnection.disconnect();
        
        // Default selected item:
        this.managers_page_create_task_category_assignment_options.setSelectedIndex(0);
        
    }
    
    
    /*
        Function to create a new task category when the create-category button is clicked (and released)
    */
    private void managers_page_create_task_category_create_buttonActionPerformed() {//GEN-FIRST:event_managers_page_create_task_category_create_buttonActionPerformed
        // Get Data from UI:
        String task_name = this.managers_page_create_task_category_name_text.getText();
        String description = this.managers_page_create_task_category_description_text.getText();
        String team_ID = Objects.requireNonNull(
            this.managers_page_create_task_category_assignment_options
                .getSelectedItem())
            .toString();

        // Validate data: Log a message to the user if there is a problem:
        if (task_name.length() == 0) {
            this.managers_page_create_task_category_message_label.setText("Empty task name");
            return;
        }
        if (description.length() == 0) {
            this.managers_page_create_task_category_message_label.setText("Empty description");
            return;
        }
        if (team_ID.equals("[select team]")) {
            this.managers_page_create_task_category_message_label.setText("Empty team name");
            return;
        }
        
       
        // Insert a task category record into the database:
        boolean category_created;
        DBConnection.connect();
        PreparedStatement prepSt = DBConnection.prepared_statement("INSERT INTO TASKCATEGORIES (name, category_description, created_by_member_id, created_on, task_category_id, team_id)" +
                    " VALUES (?, ?, ?, DEFAULT, DEFAULT, ?)");
        category_created = (prepSt != null)
                    && DBConnection.set_statement_value(prepSt, 1, task_name)
                    && DBConnection.set_statement_value(prepSt, 2, description)
                    && DBConnection.set_statement_value(prepSt, 3, SystemController.current_user.ID())
                    && DBConnection.set_statement_value(prepSt, 4, team_ID)
                    && DBConnection.execute_update(prepSt);
        DBConnection.disconnect();
            
        if (category_created) {
            // Clear the UI:
            this.managers_page_create_task_category_name_text.setText("");
            this.managers_page_create_task_category_description_text.setText("");
            this.managers_page_create_task_category_assignment_options.setSelectedIndex(0);
            this.managers_page_create_task_category_message_label.setText("Task category created.");
        } else
            this.managers_page_create_task_category_message_label.setText("Task category creation failed! The category name may have been used.");
        
    }//GEN-LAST:event_managers_page_create_task_category_create_buttonActionPerformed

    
    
    // ------------------------ TASK CREATION SECTION -------------------------
    
    /*
        Function to define switching between task and subtask creation featues:
    */
    public void __task_categories_and_subtask_parent_change_response__() {
        if (this.managers_page_create_task_assignment_options.getItemCount() == 0 || this.managers_page_create_task_assignment_options.getSelectedItem() == null || this.managers_page_create_task_assignment_options.getSelectedIndex() == 0) return;  // stop short if there is no team/leader option at all
        String[] team_info = this.managers_page_create_task_assignment_options.getSelectedItem().toString().split("/", 2);  // team_info[0] = team_ID; team_info[1] = leader_username;

        if (this.managers_page_create_task_options.getSelectedIndex() == 0) {   // intend to create a task
            
            javax.swing.DefaultListModel category_model = (javax.swing.DefaultListModel) this.managers_page_create_task_choose_categories_list.getModel();
            category_model.clear();     // clear old local categories

            // Query task categories in the selected team leader's team:
            boolean categories_retrieved = true;
            DBConnection.connect();

            PreparedStatement ps = DBConnection.prepared_statement("SELECT NAME FROM TASKCATEGORIES WHERE TEAM_ID = ?");
            if (ps == null || !DBConnection.set_statement_value(ps, 1, team_info[0])) categories_retrieved = false;
            
            ResultSet rs = DBConnection.execute_query(ps);
            try {
                while (true) {
                    assert rs != null;
                    if (!rs.next()) break;
                    category_model.addElement(rs.getString("NAME"));
                }
            } catch (Exception exception) {
                exception.printStackTrace();
                categories_retrieved = false;
            }

            DBConnection.disconnect();
            if (!categories_retrieved) {
                this.managers_page_create_task_message_label.setText("Failed to query task.");
                return;
            }

            // Enable task category selection, and disable parent task selection:
            for (java.awt.Component component : this.managers_page_create_task_choose_categories_pane.getComponents()) { component.setEnabled(true); this.managers_page_create_task_choose_categories_list.setEnabled(true); }
            for (java.awt.Component component : this.managers_page_create_task_choose_parent_task_pane.getComponents()) component.setEnabled(false);

        } else if (this.managers_page_create_task_options.getSelectedIndex() == 1) { // intend to create a subtask
            
            this.managers_page_create_task_choose_parent_task_options.removeAllItems();     // clear old local parent tasks

            // Query all the task names (not subtasks) in this team (identified by team_info[0]).
            // If the query fails log a message to the user:
            boolean tasks_retrieved = true;
            DBConnection.connect();

            PreparedStatement ps = DBConnection.prepared_statement("SELECT NAME FROM TASKS WHERE TEAM_ID = ? AND DELETED != 'Y'");
            if (ps == null || !DBConnection.set_statement_value(ps, 1, team_info[0])) tasks_retrieved = false;

            ResultSet rs = DBConnection.execute_query(ps);
            try {
                // after the query, add the task name into the parent task selection box
                while (true) {
                    assert rs != null;
                    if (!rs.next()) break;
                    managers_page_create_task_choose_parent_task_options
                        .addItem(rs.getString("NAME"));
                }
            } catch (Exception exception) {
                exception.printStackTrace();
                tasks_retrieved = false;
            }

            DBConnection.disconnect();
            if (!tasks_retrieved) { this.managers_page_create_task_message_label.setText("Subtask query has failed."); return; }

            // Disable task category selection, and enable parent task selection:
            for (java.awt.Component component : this.managers_page_create_task_choose_categories_pane.getComponents()) { component.setEnabled(false); this.managers_page_create_task_choose_categories_list.setEnabled(false); }
            for (java.awt.Component component : this.managers_page_create_task_choose_parent_task_pane.getComponents()) component.setEnabled(true);

        } else
            System.out.println("ERROR: Task creation properties are corrupted!");
    }
    
    
    /*
        Function to define drop-down selection behaviours for different options of task creation.
    */
    public void __init_create_task_panel_selection_change_response__() {
        
        final ManagersPage self = this;
        
        // Upon changing selection of task priority:
        this.managers_page_create_task_priority_options.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                short selected_index = (short) (self.managers_page_create_task_priority_options.getSelectedIndex() + 1);
                self.managers_page_create_task_priority_colour.setBackground(TaskPrototype.color(selected_index));
            }
        });
        
        // Upon changing selection of task type:
        this.managers_page_create_task_options.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                int selected = self.managers_page_create_task_options.getSelectedIndex();
                self.create_task_recurrence_options.setEnabled(selected == 0);  // enable recurrence selection if selected task
                self.__task_categories_and_subtask_parent_change_response__();
            }
        });
        
        // Upon changing selection of the assigned member:
        this.managers_page_create_task_assignment_options.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                self.__task_categories_and_subtask_parent_change_response__();
            }
        }); 
        
    }
    
    
    /*
        Function to initialise the create-task tab when entering the tab.
    */
    public void create_task_reset_task_options() {
        
        this.managers_page_create_task_options.setSelectedIndex(0);                 // default to select task
        this.create_task_recurrence_options.setSelectedIndex(0);                    // default to select non-recurrent task
        this.managers_page_create_task_assignment_options.removeAllItems();         // reset task assignment options
        this.managers_page_create_task_assignment_options.addItem("[team/leader]");
        
        ( (javax.swing.DefaultListModel) this.managers_page_create_task_choose_categories_list.getModel() ).clear();// clear task category list
        this.managers_page_create_task_choose_parent_task_options.removeAllItems(); // clear potential parent tasks list
        
        // Query all team ID's and their leader usernames from the database:
        boolean team_info_retrieved = true;
        DBConnection.connect();

        ResultSet rs = DBConnection.query("SELECT T.TEAM_ID, M.USERNAME FROM TEAMS T, MEMBERS M WHERE T.TEAM_LEADER_ID = M.MEMBER_ID AND T.DELETED != 'Y' AND M.DELETED != 'Y'");
        try {
            // after the query,
            // store each team name and leader username into
            // assignment selection options
            while (rs.next()) this.managers_page_create_task_assignment_options.addItem(rs.getString("TEAM_ID") + "/" + rs.getString("USERNAME"));
        } catch (Exception e) {
            e.printStackTrace();
            team_info_retrieved = false;
        }
        
        DBConnection.disconnect();
        if (!team_info_retrieved) this.managers_page_create_task_message_label.setText("Unable to retrieve team and leader information.");
        
        for (java.awt.Component component : this.managers_page_create_task_choose_categories_pane.getComponents()) component.setEnabled(false);
        for (java.awt.Component component : this.managers_page_create_task_choose_parent_task_pane.getComponents()) component.setEnabled(false);
        this.managers_page_create_task_assignment_options.setSelectedIndex(0);      // default selection - no team/leader
        
    }
    
    
    /*
        Function to create a task or subtask when the create-task/subtask button is clicked (and released).
    */
    private void managers_page_create_task_create_buttonActionPerformed() {
        //GEN-FIRST:event_managers_page_create_task_create_buttonActionPerformed
        
        // Collect information from the UI:
        String task_type = Objects.requireNonNull(
            this.managers_page_create_task_options
                .getSelectedItem()).toString();
        String name = this.managers_page_create_task_name_text.getText();
        short priority = (short) (this.managers_page_create_task_priority_options.getSelectedIndex() + 1);
        String description = this.managers_page_create_task_description_text.getText();
        String due_date = this.managers_page_create_task_due_date_text.getText();
        String[] team_info = Objects.requireNonNull(
            this.managers_page_create_task_assignment_options.getSelectedItem())
            .toString().split("/", 2);
        
        // Validate the data:
        // make sure (sub-)task name, priority, description, due date, team ID,
        // and leader username are okay.
        if (name.length() == 0) {
            this.managers_page_create_task_message_label.setText("Empty task name.");
            return;
        }
        if (description.length() == 0) {
            this.managers_page_create_task_message_label.setText("Empty description");
            return;
        }
        java.util.Date parsed_due_date;
        try {
            parsed_due_date = new SimpleDateFormat("MM/dd/yyyy").parse(due_date);
        }
        catch(java.text.ParseException e) { 
            e.printStackTrace();
            this.managers_page_create_task_message_label.setText("Incorrect due date format.");
            return;
        } 
        if (this.managers_page_create_task_assignment_options.getSelectedIndex() == 0) { this.managers_page_create_task_message_label.setText("No team leader selected."); return; }
        
        
        
        if (task_type.equals("Task")) {
            List<String> categories = this.managers_page_create_task_choose_categories_list.getSelectedValuesList();
            
            int recur_interval = Task.to_recur_interval(Objects.requireNonNull(
                this.create_task_recurrence_options.getSelectedItem()).toString());
            
            // Validate the data: make sure the category selection, recurrence interval are okay.
            // If there is a problem, log a message to the user.
            if (recur_interval == -1) { this.managers_page_create_task_message_label.setText("Recurrence selection is corrupted."); return; }
            if (categories.isEmpty()) { this.managers_page_create_task_message_label.setText("No task categories selected."); return; }
            int[] category_IDs = new int[categories.size()];    // data structure to store the category ID's
            
            
            // Insert a new task into the database,ASSIGNED_TO_MEMBER_ID should be
            // the ID of the leader with getUsername team_info[1]:
            // 1. query the selected team leader's ID:
            int leader_ID = -1;
            boolean task_inserted;
            DBConnection.connect();
            DBConnection.transaction(DBConnection.Transaction.BEGIN);
            
            PreparedStatement ps = DBConnection.prepared_statement("SELECT MEMBER_ID FROM MEMBERS WHERE USERNAME = ? AND DELETED != 'Y'");
            task_inserted = (ps != null)
                        && DBConnection.set_statement_value(ps, 1, team_info[1]);
            ResultSet rs = DBConnection.execute_query(ps);
            try {
                assert rs != null;
                rs.next();
                leader_ID = rs.getInt("MEMBER_ID"); 
            } catch (Exception e) { 
                e.printStackTrace();
                task_inserted = false;
            }
            if (!task_inserted) {
                this.managers_page_create_task_message_label.setText("Team leader ID query failed.");
                DBConnection.transaction(DBConnection.Transaction.ROLLBACK);
                DBConnection.transaction(DBConnection.Transaction.END);
                DBConnection.disconnect(); return;
            }
            
            // 2. query the selected task category ID's:
            String query_categories_statement = "SELECT TASK_CATEGORY_ID FROM TASKCATEGORIES WHERE (";
            for (int i=0; i < categories.size(); ++i) query_categories_statement = query_categories_statement + "NAME = ? OR ";
            query_categories_statement = query_categories_statement.substring(0, query_categories_statement.length() - 4);  // remove the trailing " OR ";
            query_categories_statement += ") AND TEAM_ID = ?";
            ps = DBConnection.prepared_statement(query_categories_statement);
            task_inserted = (ps != null);
            int cat_index = 1;
            for (String category_name: categories) {
                if (!task_inserted) break;
                task_inserted = DBConnection.set_statement_value(ps, cat_index, category_name);
                ++cat_index; 
            }
            if (task_inserted) task_inserted = DBConnection.set_statement_value(ps, cat_index, team_info[0]);

            rs = DBConnection.execute_query(ps);
            try {
                cat_index = 0;
                while (true) {
                    assert rs != null;
                    if (!rs.next()) break;
                    category_IDs[cat_index] = rs.getInt("TASK_CATEGORY_ID");
                    ++cat_index;
                }
            } catch (Exception e) {
                e.printStackTrace();
                task_inserted = false;
            }
            if (!task_inserted) {
                this.managers_page_create_task_message_label.setText("Task category ID's query failed.");
                DBConnection.transaction(DBConnection.Transaction.ROLLBACK);
                DBConnection.transaction(DBConnection.Transaction.END);
                DBConnection.disconnect(); return;
            }
            
            // 3. insert the task:
            ps = DBConnection.prepared_statement("INSERT INTO TASKS(NAME, TASK_DESCRIPTION, DUE_DATE, CREATED_BY_MEMBER_ID, TASK_PRIORITY, ASSIGNED_TO_MEMBER_ID, TEAM_ID, RECUR_INTERVAL) VALUES(?, ?, ?, ?, ?, ?, ?, ?)");
            task_inserted = (ps != null)
                            && DBConnection.set_statement_value(ps, 1, name)
                            && DBConnection.set_statement_value(ps, 2, description)
                            && DBConnection.set_statement_value(ps, 3, new java.sql.Date(parsed_due_date.getTime()))
                            && DBConnection.set_statement_value(ps, 4, SystemController.current_user.ID())
                            && DBConnection.set_statement_value(ps, 5, priority)
                            && DBConnection.set_statement_value(ps, 6, leader_ID)
                            && DBConnection.set_statement_value(ps, 7, team_info[0])
                            && DBConnection.set_statement_value(ps, 8, recur_interval)
                            && DBConnection.execute_update(ps);
            if (!task_inserted) {
                this.managers_page_create_task_message_label.setText("Task creation failed.");
                DBConnection.transaction(DBConnection.Transaction.ROLLBACK);
                DBConnection.transaction(DBConnection.Transaction.END);
                DBConnection.disconnect(); return;
            }
            
            // 4. get task ID
            int task_ID = -1;
            ps = DBConnection.prepared_statement("SELECT TASK_ID FROM TASKS WHERE NAME = ? AND TEAM_ID = ? AND DELETED != 'Y'");
            task_inserted = (ps != null)
                        && DBConnection.set_statement_value(ps, 1, name)
                        && DBConnection.set_statement_value(ps, 2, team_info[0]);

            rs = DBConnection.execute_query(ps);
            try {
                assert rs != null;
                rs.next();
                task_ID = rs.getInt("TASK_ID"); 
            } catch (Exception e) {
                e.printStackTrace();
                task_inserted = false;
            }
            if (!task_inserted) {
                this.managers_page_create_task_message_label.setText("Task creation not detected.");
                DBConnection.transaction(DBConnection.Transaction.ROLLBACK);
                DBConnection.transaction(DBConnection.Transaction.END);
                DBConnection.disconnect(); return;
            }
            
            // 5. insert records of task in categories:
            ps = DBConnection.prepared_statement("INSERT INTO TASKINCATEGORIES(TASK_ID, TASK_CATEGORY_ID) VALUES(?, ?)");
            task_inserted = (ps != null);
            for (int category_ID: category_IDs) {
                if (!task_inserted) break;
                task_inserted = DBConnection.set_statement_value(ps, 1, task_ID)
                                && DBConnection.set_statement_value(ps, 2, category_ID)
                                && DBConnection.execute_update(ps);
            }
            if (!task_inserted) {
                this.managers_page_create_task_message_label.setText("Task categorisation failed.");
                DBConnection.transaction(DBConnection.Transaction.ROLLBACK);
                DBConnection.transaction(DBConnection.Transaction.END);
                DBConnection.disconnect();
                return;
            }
            
            DBConnection.transaction(DBConnection.Transaction.END);
            DBConnection.disconnect();

            this.managers_page_create_task_message_label.setText("Task created");


            
        } else if (task_type.equals("Subtask")) {
            
            
            // Validate the data: make sure the parent task selection is okay.
            // If there is a problem, log a message to the user.
            if (this.managers_page_create_task_choose_parent_task_options.getItemCount() == 0) { this.managers_page_create_task_message_label.setText("No parent task selected."); return; }
            String parent_task_name =
                Objects.requireNonNull(
                    this.managers_page_create_task_choose_parent_task_options
                        .getSelectedItem()).toString();
                
            
            // Insert a new subtask into the database,
            // ASSIGNED_TO_MEMBER_ID should be
            // the ID of the leader with username team_info[1]:
            // Use the following function to get the creator's ID:
            // 1. query the selected team leader's ID
            int leader_ID = -1;
            boolean subtask_inserted;
            DBConnection.connect();
            
            PreparedStatement ps = DBConnection.prepared_statement("SELECT MEMBER_ID FROM MEMBERS WHERE USERNAME = ? AND DELETED != 'Y'");
            subtask_inserted = (ps != null)
                            && DBConnection.set_statement_value(ps, 1, team_info[1]);
            ResultSet rs = DBConnection.execute_query(ps);
            try {
                assert rs != null;
                rs.next();
                leader_ID = rs.getInt("MEMBER_ID"); 
            } catch (Exception e) { 
                e.printStackTrace();
                subtask_inserted = false;
            }
            if (!subtask_inserted) {
                this.managers_page_create_task_message_label.setText("Team leader ID query failed.");
                DBConnection.disconnect(); return;
            }
            
            // 2. query the selected parent task category ID:
            int parent_ID = -1;
            ps = DBConnection.prepared_statement("SELECT TASK_ID FROM TASKS WHERE NAME = ? AND TEAM_ID = ? AND DELETED != 'Y'");
            subtask_inserted = (ps != null)
                            && DBConnection.set_statement_value(ps, 1, parent_task_name)
                            && DBConnection.set_statement_value(ps, 2, team_info[0]);

            rs = DBConnection.execute_query(ps);
            try {
                assert rs != null;
                rs.next();
                parent_ID = rs.getInt("TASK_ID");
            } catch (Exception e) {
                e.printStackTrace();
                subtask_inserted = false;
            }
            if (!subtask_inserted) {
                this.managers_page_create_task_message_label.setText("Parent task ID query failed.");
                DBConnection.disconnect(); return;
            }
            
            // 3. insert the subtask into the database:
            ps = DBConnection.prepared_statement("INSERT INTO SUBTASK(NAME, DESCRIPTION, DUE_DATE, CREATED_BY_MEMBER_ID, PRIORITY, ASSIGNED_TO_MEMBER_ID, SUBTASK_TO) VALUES(?, ?, ?, ?, ?, ?, ?)");
            subtask_inserted = (ps != null)
                            && DBConnection.set_statement_value(ps, 1, name)
                            && DBConnection.set_statement_value(ps, 2, description)
                            && DBConnection.set_statement_value(ps, 3, new java.sql.Date(parsed_due_date.getTime()))
                            && DBConnection.set_statement_value(ps, 4, SystemController.current_user.ID())
                            && DBConnection.set_statement_value(ps, 5, priority)
                            && DBConnection.set_statement_value(ps, 6, leader_ID)
                            && DBConnection.set_statement_value(ps, 7, parent_ID)
                            && DBConnection.execute_update(ps);
            
            
            // After the insertion, log a message to inform the user of the insert status:
            if (subtask_inserted) this.managers_page_create_task_message_label.setText("Subtask created.");
            else this.managers_page_create_task_message_label.setText("Subtask creation failed.");
            
        }
        
    }//GEN-LAST:event_managers_page_create_task_create_buttonActionPerformed

    
    
    // ----------------------- USER MANAGEMENT SECTION ------------------------
    
    /*
        Function to create a user when the create-user button is clicked (and released):
    */
    private void managers_page_create_user_create_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managers_page_create_user_create_buttonActionPerformed
        // Collect new user information from the UI:
        String user_role = Objects.requireNonNull(this.managers_page_create_user_options.getSelectedItem()).toString();
        String username = this.managers_page_create_username_text.getText();
        char[] password = this.managers_page_create_user_password_text.getPassword();

        // Validate input
        // (make sure getUsername is acceptable, password is acceptable):
        if (username.length() < 6) {
            this.managers_page_create_user_message_label.setText("User ID field cannot contain fewer than 6 characters.");
            return;
        }
        if (password.length < 6) {
            this.managers_page_create_user_message_label.setText("Password field cannot contain fewer than 6 characters.");
            return;
        }

        
        // After validation, insert the data into the database -> insert into Members:
        boolean created_user;
        DBConnection.connect();
        PreparedStatement ps = DBConnection.prepared_statement(
            "INSERT INTO MEMBERS " +
                "(member_id, getUsername, member_password, member_role, team_id)" +
                    " VALUES (DEFAULT, ?, ?, ?, NULL)");

        created_user = (ps != null)
                        && DBConnection.set_statement_value(ps, 1, username)
                        && DBConnection.set_statement_value(ps, 2, new String(password))
                        && DBConnection.set_statement_value(ps, 3, user_role)
                        && DBConnection.execute_update(ps);

        DBConnection.disconnect();
        
        // Check database insert result:
        if (created_user) {
            // Clear the data: Make sure that no variables are storing sensitive information. Also, clean the UI.
            this.managers_page_create_username_text.setText("");
            this.managers_page_create_user_password_text.setText("");
            this.managers_page_create_user_options.setSelectedIndex(0);
            this.managers_page_create_user_message_label.setText("User created.");
            
            // Reload the user management section/panel:
            this.modifcation_section_load_users(false);
        } else
            this.managers_page_create_user_message_label.setText(
                "User creation failed! " +
                    "This username may have been used by another account.");
        
        
    }//GEN-LAST:event_managers_page_create_user_create_buttonActionPerformed
    
    
    /*
        Function to respond to the switches in the user modification section, and enable corresponding panels:
    */
    public void __edit_delete_user_change_response__() {
        
        if (this.managers_page_modify_user_search_username_options.getItemCount() == 0 || this.managers_page_modify_user_search_username_options.getSelectedIndex() == 0) return; // no user selected
        
        
        if (Objects.requireNonNull(
            this.managers_page_modify_user_action_options
                .getSelectedItem()).toString().equals("Edit")
        ) { // intends to edit user data
            
            for (java.awt.Component component : this.managers_page_modify_user_edit_pane.getComponents()) component.setEnabled(true);      // enable user editing
            for (java.awt.Component component : this.managers_page_modify_user_unresolved_pane.getComponents()) { component.setEnabled(false); this.managers_page_modify_user_unresolved_tasks_list.setEnabled(false); }    // disable user deletion info
            
        } else {    // intends to delete user
            
            // Get user data from UI:
            AppUser.UserType user_role =
                AppUser.toUserType( Objects.requireNonNull(
                    this.managers_page_modify_user_options
                        .getSelectedItem()).toString() );
            String username =
                Objects.requireNonNull(
                    this.managers_page_modify_user_search_username_options
                        .getSelectedItem()).toString();
            javax.swing.DefaultListModel unresolved_model = (javax.swing.DefaultListModel) this.managers_page_modify_user_unresolved_tasks_list.getModel();
            
            
            // If user_role is a team leader, query all the tasks he is assigned to.
            if (user_role == AppUser.UserType.TEAM_LEAD) {
                
                boolean tasks_retrieved;
                String team_ID = "";

                DBConnection.connect();
                
                // 1. query the team ID of the team the selected user leads.
                // Make use of @getUsername
                PreparedStatement ps = DBConnection.prepared_statement("SELECT T.TEAM_ID FROM TEAMS T, MEMBERS U WHERE U.USERNAME = ? AND T.TEAM_LEADER_ID = U.MEMBER_ID AND T.DELETED != 'Y' AND U.DELETED != 'Y'");
                tasks_retrieved = (ps != null)
                            && DBConnection.set_statement_value(ps, 1, username);
                ResultSet rs = DBConnection.execute_query(ps);
                try {
                    assert rs != null;
                    rs.next();
                    team_ID = rs.getString("TEAM_ID");
                } catch (Exception e) {
                    e.printStackTrace();
                    tasks_retrieved = false;
                }
                if (!tasks_retrieved) {
                    this.managers_page_modify_user_message_label.setText("Team ID query failed.");
                    DBConnection.disconnect(); return;
                }

                // 2. query all task names in the queried team:
                ps = DBConnection.prepared_statement("SELECT NAME FROM TASKS WHERE TEAM_ID = ? AND DELETED != 'Y'");
                tasks_retrieved = (ps != null) && DBConnection.set_statement_value(ps, 1, team_ID);
                rs = DBConnection.execute_query(ps);
                try {
                    // 3. add the queried task names into the unresolved list:
                    while (true) {
                        assert rs != null;
                        if (!rs.next()) break;
                        unresolved_model.addElement("Task - " + rs.getString("NAME"));
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    tasks_retrieved = false;
                }
                if (!tasks_retrieved) {
                    this.managers_page_modify_user_message_label.setText("Task name query failed.");
                    DBConnection.disconnect(); return;
                }

                // 4. set the information of the team led by the selected user in the UI:
                managers_page_modify_user_unresolved_team_label.setText(team_ID);
                DBConnection.disconnect();
                
            }
            

            DBConnection.connect();

            // Query all subtask names that are assigned to the selected user:
            // 1. get subtask names from the database. Make use of @getUsername
            boolean subtasks_retrieved;
            PreparedStatement ps = DBConnection.prepared_statement("SELECT NAME FROM SUBTASK WHERE ASSIGNED_TO_MEMBER_ID = (SELECT MEMBER_ID FROM MEMBERS WHERE USERNAME = ? AND DELETED != 'Y') AND DELETED != 'Y'");
            subtasks_retrieved = (ps != null)
                        && DBConnection.set_statement_value(ps, 1, username);
            ResultSet rs = DBConnection.execute_query(ps);
            try {
                // 2. add the queried subtask names into the unresolvd list:
                while(true) {
                    assert rs != null;
                    if (!rs.next()) break;
                    unresolved_model.addElement("SubTask - " + rs.getString("NAME"));
                }
            } catch (Exception e) {
                e.printStackTrace();
                subtasks_retrieved = false;
            }
            if (!subtasks_retrieved)
                this.managers_page_modify_user_message_label.setText("Subtask query failed.");

            DBConnection.disconnect();
            
            if (subtasks_retrieved) {
                for (java.awt.Component component : this.managers_page_modify_user_edit_pane.getComponents()) component.setEnabled(false);      // disable user editing
                for (java.awt.Component component : this.managers_page_modify_user_unresolved_pane.getComponents()) { component.setEnabled(true); this.managers_page_modify_user_unresolved_tasks_list.setEnabled(true); }    // enable user deletion info
            }
        }

    }
    
    
    /*
        Function to load user options to modify:
    */
    public void modifcation_section_load_users(boolean complete_reload) {
        
        if (complete_reload) {
            this.managers_page_modify_user_action_options.setSelectedIndex(0);
            // default to edit mode
            this.managers_page_modify_user_options.setSelectedIndex(0);
            // default to base user
        }
        this.managers_page_modify_user_search_username_options.removeAllItems();
        // clear old local getUsername data
        this.managers_page_modify_user_search_username_options.addItem("[usernames]");
        // reset default option placeholder
        this.managers_page_edit_username_text.setText("");
        this.managers_page_edit_password_text.setText("");
        ( (javax.swing.DefaultListModel) this.managers_page_modify_user_unresolved_tasks_list.getModel() ).clear();
        // clear unresolved items
        this.managers_page_modify_user_unresolved_team_label.setText("not a team leader");  // default is base user
        
        // Get data from the UI:
        String user_type = Objects.requireNonNull(this.managers_page_modify_user_options.getSelectedItem()).toString();
        
        
        DBConnection.connect();
        
        // Query usernames whose role is equal to @user_type:
        boolean users_retrieved;
        PreparedStatement ps = DBConnection.prepared_statement("SELECT USERNAME FROM MEMBERS WHERE MEMBER_ROLE = ? AND DELETED != 'Y'");
        users_retrieved = (ps != null) && DBConnection.set_statement_value(ps, 1, user_type);
        ResultSet rs = DBConnection.execute_query(ps);
        try {
            while(true) {
                assert rs != null;
                if (!rs.next()) break;
                this.managers_page_modify_user_search_username_options.addItem(rs.getString("USERNAME"));
            }
        } catch (Exception e) {
            // If the query fails, log a message to the user:
            this.managers_page_modify_user_message_label.setText("Failed to retrieve.");
            users_retrieved = false;
        }
        
        DBConnection.disconnect();
        
        // Reset UI:
        if (users_retrieved) {
            for (java.awt.Component component : this.managers_page_modify_user_edit_pane.getComponents()) component.setEnabled(false);
            for (java.awt.Component component : this.managers_page_modify_user_unresolved_pane.getComponents()) { component.setEnabled(false); this.managers_page_modify_user_unresolved_tasks_list.setEnabled(false); }
            this.managers_page_modify_user_search_username_options.setSelectedIndex(0);     // set default selection choice
        }
        
    }
    
    
    /*
        Function to define user modification option-switch behaviours:
    */
    public void __init_modify_user_panel_selection_change_response__() {
        
        final ManagersPage self = this;
        
        // Upon changing selection of modification action:
        this.managers_page_modify_user_action_options.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                //self.modifcation_section_load_users();
                self.__edit_delete_user_change_response__();
            }
        });
        
        // Upon changing selection of the user type:
        this.managers_page_modify_user_options.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                self.modifcation_section_load_users(false);
                self.__edit_delete_user_change_response__();
            }
        });
        
        // Upon changing selection of the getUsername:
        this.managers_page_modify_user_search_username_options.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                self.__edit_delete_user_change_response__();
            }
        });
        
    }
    
    
    /*
        Function to modify user when the submit button is closed in the "Modify User" section:
    */
    private void managers_page_modify_user_submit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managers_page_modify_user_submit_buttonActionPerformed
        
        if (this.managers_page_modify_user_search_username_options.getSelectedIndex() == 0) { this.managers_page_modify_user_message_label.setText("No user selected."); return; }
        String username = Objects.requireNonNull(this.managers_page_modify_user_search_username_options.getSelectedItem()).toString();
        
        
        if (Objects.requireNonNull(this.managers_page_modify_user_action_options.getSelectedItem()).toString().equals("Edit")) {    // intends to edit user data
            
            // Get modified user data from the UI.
            String new_username = this.managers_page_edit_username_text.getText();
            char [] new_password = this.managers_page_edit_password_text.getPassword();
            boolean username_entered = true;
            boolean password_entered = true;
            // Validate the new getUsername and password. The user is allow to only update either one of the fields.
            if (new_username.length() < 6)
            {
                if (new_username.length() == 0)
                    username_entered = false;
                else {
                    this.managers_page_modify_user_message_label.setText("User ID field cannot contain fewer than 6 characters.");
                    return;
                }
            }

            if (new_password.length < 6) {
                if (new_password.length == 0)
                    password_entered = false;
                else {
                    this.managers_page_modify_user_message_label.setText("Password field cannot contain fewer than 6 characters.");
                    return;
                }
            }
            if (!username_entered && !password_entered)
            {
                this.managers_page_modify_user_message_label.setText("Cannot leave both fields empty");
                return;
            }

            
            // Update the user data in the database. If only one field is to be updated, do not update the other one.
            boolean updated;
            DBConnection.connect();
            
            String update_declaration = "UPDATE MEMBERS SET ";
            String update_fields = "";
            String update_condition = "WHERE USERNAME = ? AND DELETED != 'Y'";
            if (username_entered) update_fields += "USERNAME = ? ";
            if (password_entered) {
                if (username_entered) update_fields += ", ";
                update_fields += "MEMBER_PASSWORD = ? ";
            }
            PreparedStatement ps = DBConnection.prepared_statement(update_declaration + update_fields + update_condition);
            int field_counter = 1;
            updated = ps == null || !username_entered || DBConnection.set_statement_value(ps, field_counter++, new_username);
            updated = (updated && password_entered)? DBConnection.set_statement_value(ps, field_counter++, new String(new_password)) : updated;
            updated = updated && DBConnection.set_statement_value(ps, field_counter++, username);
            updated = updated && DBConnection.execute_update(ps, true);
            
            DBConnection.disconnect();
            
            if (updated) {
                this.managers_page_modify_user_message_label.setText("Update is successful.");
                this.modifcation_section_load_users(true);
            } else // After the update, log a message to the user to indicate the result.
                this.managers_page_modify_user_message_label.setText("Update failed.");
                

        } else {    // intends to delete user
            
            // Get the user type. If the user is team leader, reject the deletion.
            if (AppUser.toUserType(Objects.requireNonNull(this.managers_page_modify_user_options.getSelectedItem()).toString()) == AppUser.UserType.TEAM_LEAD) {
                this.managers_page_modify_user_message_label.setText("Team leaders cannot be deleted.");
                return;
            }
            // Check the unresolved list. If the list is not empty, reject the deletion.
            if (this.managers_page_modify_user_unresolved_tasks_list.getModel().getSize() != 0) {
                this.managers_page_modify_user_message_label.setText("User still has tasks assigned.");
                return;
            }
            
            // Delete the user data from the database.
            boolean deletedUser;
            DBConnection.connect();

            PreparedStatement ps = DBConnection.prepared_statement("UPDATE MEMBERS SET DELETED = 'Y' WHERE USERNAME = ? AND DELETED != 'Y'");
            deletedUser = DBConnection.set_statement_value(ps, 1, username)
                && DBConnection.execute_update(ps, true);
                
            DBConnection.disconnect();

            // After deletion, log a message to the user to indicate the result.
            if (deletedUser) {
                this.modifcation_section_load_users(true);
                this.managers_page_modify_user_message_label.setText("User deletion is successful.");
            } else
                this.managers_page_modify_user_message_label.setText("User deletion failed.");
        }
        
        
    }//GEN-LAST:event_managers_page_modify_user_submit_buttonActionPerformed
    
    
    
    // ----------------------- TEAM MANAGEMENT SECTION ------------------------
    
    /*
        Function to define data loading behaviours upon switching selection of the team to manage:
    */
    public void __init_manage_teams_panel_selection_change_response__() {
        
        final ManagersPage self = this;
        
        // Upon changing selection of the team and leader:
        this.managers_page_manage_teams_search_options.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                
                if (self.managers_page_manage_teams_search_options.getItemCount() == 0 ||
                    self.managers_page_manage_teams_search_options.getSelectedIndex() == 0) { // no team selected
                    self.manage_teams_to_task_page_button.setEnabled(false);
                    self.manage_teams_to_team_leaders_page_button.setEnabled(false);
                    return;
                } 
                
                self.manage_teams_to_task_page_button.setEnabled(true);         // enable navigation to the team
                self.manage_teams_to_team_leaders_page_button.setEnabled(true);
                self.managers_page_remove_team_member_options.removeAllItems();
                self.managers_page_remove_team_member_options.addItem("[select getUsername]");
                self.managers_page_add_team_member_options.removeAllItems();
                self.managers_page_add_team_member_options.addItem("[select getUsername]");
                self.managers_page_reassign_team_leader_options.removeAllItems();
                self.managers_page_reassign_team_leader_options.addItem("[select getUsername]");
                
                String[] team_info = Objects.requireNonNull(self.managers_page_manage_teams_search_options.getSelectedItem()).toString().split("/", 2);
                
                // Download member usernames and roles, who are in the selected team or without a team (limit the query to base users only):
                String username;

                DBConnection.connect();

                // 1. query the member usernames using the selected team ID team_info[0]:
                PreparedStatement ps = DBConnection.prepared_statement("SELECT USERNAME FROM MEMBERS WHERE TEAM_ID = ? AND MEMBER_ROLE = 'Base User' AND DELETED != 'Y'");
                DBConnection.set_statement_value(ps, 1, team_info[0]);
                ResultSet rs = DBConnection.execute_query(ps);
                try {
                    // 2. save each getUsername that belongs to the selected team (TEAM_ID = team_info[0]) into the list of members that can be removed
                    // 4. add each queried getUsername into the list of members that can be assigned as the new team leader of the selected team
                    while(true) {
                        assert rs != null;
                        if (!rs.next()) break;
                        username = rs.getString("USERNAME");
                        self.managers_page_remove_team_member_options.addItem(username);
                        self.managers_page_reassign_team_leader_options.addItem(username);
                    }
                } catch (Exception exception) {
                    exception.printStackTrace();
                    self.managers_page_remove_team_member_actions_message.setText("ERROR: Team members query failed.");
                    DBConnection.disconnect(); return;
                }
                
                
                rs = DBConnection.query("SELECT USERNAME FROM MEMBERS WHERE TEAM_ID IS NULL AND MEMBER_ROLE = 'Base User' AND DELETED != 'Y'");
                try {
                    // 3. save each getUsername that does not belong to any team (TEAM_ID = null) into the list of members that can be added:
                    // 4. add each queried getUsername into the list of members that can be assigned as the new team leader of the selected team
                    while(rs.next()) {
                        username = rs.getString("USERNAME");
                        self.managers_page_add_team_member_options.addItem(username);
                        self.managers_page_reassign_team_leader_options.addItem(username);
                    }

                } catch (Exception f) {
                    f.printStackTrace();
                    self.managers_page_add_team_member_actions_message.setText("ERROR: Non-team members query failed.");
                    DBConnection.disconnect(); return;
                }
                
                DBConnection.disconnect();

                
                // Reset message labels:
                self.managers_page_remove_team_member_actions_message.setText("");
                self.managers_page_add_team_member_actions_message.setText("");
                self.managers_page_reassign_team_leader_actions_message.setText("");
                self.managers_page_update_team_name_text.setText("");
                self.managers_page_update_team_name_message.setText("");
                self.managers_page_delete_team_message.setText("");
                
            }
        });
        
    }
    
    
    /*
        Fucntion to reload the teams in the manage-teams tab:
    */
    public void manage_teams_load_teams() {
        
        this.managers_page_manage_teams_search_options.removeAllItems();
        this.managers_page_manage_teams_search_options.addItem("[team/leader]");        // clear old local team records
        this.managers_page_remove_team_member_options.removeAllItems();
        this.managers_page_remove_team_member_options.addItem("[select getUsername]");     // clear old local team member records
        this.managers_page_add_team_member_options.removeAllItems();
        this.managers_page_add_team_member_options.addItem("[select getUsername]");        // clear old local teamless member records
        this.managers_page_reassign_team_leader_options.removeAllItems();
        this.managers_page_reassign_team_leader_options.addItem("[select getUsername]");   // clear old local leader candidate records
        this.managers_page_update_team_name_text.setText("");   // clear old input for team name update
        this.managers_page_remove_team_member_actions_message.setText("");  // clear old message for team member removal
        this.managers_page_add_team_member_actions_message.setText("");     // clear old message for team member adding
        this.managers_page_reassign_team_leader_actions_message.setText("");// clear old message for team leader reassignment
        this.managers_page_update_team_name_message.setText("");    // clear old message for team name update
        this.managers_page_delete_team_message.setText("");         // clear old message for team deletion
        
        
        // Query all team ID's and their leader usernames:
            // 1. get team ID's and leader usernames from the database:
        boolean team_info_retrieved = true;

        DBConnection.connect();

        ResultSet rs = DBConnection.query("SELECT USERNAME, TEAM_ID FROM MEMBERS WHERE MEMBER_ROLE = 'Team Leader' AND DELETED != 'Y'");
        try {
            // 2. load each team ID and leader getUsername into the team selection dropdown:
            while(rs.next())
                this.managers_page_manage_teams_search_options.addItem(rs.getString("TEAM_ID") + "/" + rs.getString("USERNAME"));
        } catch (Exception e) {
            e.printStackTrace();
            team_info_retrieved = false;
        }

        DBConnection.disconnect();

        if (team_info_retrieved) {
            this.managers_page_manage_teams_search_options.setSelectedIndex(0);
            this.managers_page_remove_team_member_options.setSelectedIndex(0);
            this.managers_page_add_team_member_options.setSelectedIndex(0);
            this.managers_page_reassign_team_leader_options.setSelectedIndex(0);
        }
        
    }
    
    
   /*
        Function to remove a team member from the selected team when the remove-member button in the manage-members tab is clicked (and released).
    */
    private void managers_page_remove_team_member_remove_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managers_page_remove_team_member_remove_buttonActionPerformed
        
        // Get information from the UI:
        if (this.managers_page_manage_teams_search_options.getSelectedIndex() == 0) {
            this.managers_page_remove_team_member_actions_message.setText("No team selected.");
            return;
        }
        if (this.managers_page_remove_team_member_options.getSelectedIndex() == 0) {
            this.managers_page_remove_team_member_actions_message.setText("No getUsername selected.");
            return;
        }
        String[] team_info = Objects.requireNonNull(this.managers_page_manage_teams_search_options.getSelectedItem()).toString().split("/", 2);
        String username_to_remove = Objects.requireNonNull(this.managers_page_remove_team_member_options.getSelectedItem()).toString();
        

        DBConnection.connect();

        // Query the names of the subtasks that are assigned to the user with @getUsername.
        boolean user_removed;
        PreparedStatement ps = DBConnection.prepared_statement("SELECT NAME FROM SUBTASK WHERE ASSIGNED_TO_MEMBER_ID = (SELECT MEMBER_ID FROM MEMBERS WHERE USERNAME = ? AND DELETED != 'Y') AND DELETED != 'Y'");
        user_removed = (ps != null) && DBConnection.set_statement_value(ps, 1, username_to_remove);

        boolean has_pending_subtasks = true;
        ResultSet rs = DBConnection.execute_query(ps);
        try {
            assert rs != null;
            has_pending_subtasks = rs.next();
        } catch (Exception f) {
            f.printStackTrace();
            user_removed = false;
        }
        // 1. If the result is not empty, log a message to the user and reject the user's removal from the selected team:
        if (has_pending_subtasks) { 
            this.managers_page_remove_team_member_actions_message.setText("Removal failed. There are still subtasks assigned to this user.");
            DBConnection.disconnect(); return;
        }
        if (!user_removed) {
            this.managers_page_remove_team_member_actions_message.setText("Failed to retrieve assigned subtasks for this user.");
            DBConnection.disconnect(); return;
        }
        
        // Change the team_ID of the user with @getUsername to null in the database.
        ps = DBConnection.prepared_statement("UPDATE MEMBERS SET TEAM_ID = NULL WHERE USERNAME = ? AND DELETED != 'Y'");
        user_removed = (ps != null)
                && DBConnection.set_statement_value(ps, 1, username_to_remove)
                && DBConnection.execute_update(ps);

        DBConnection.disconnect();


        // After the update, reload the tab and log a message to the user to indicate the result.
        if (user_removed) {
            this.manage_teams_load_teams();
            this.managers_page_remove_team_member_actions_message.setText("Member has been removed from the team");
        } else
            this.managers_page_create_user_message_label.setText("Updating getUsername failed");


    }//GEN-LAST:event_managers_page_remove_team_member_remove_buttonActionPerformed

    
    /*
        Function to add a team member from the list of members without a team when the add-member button in the manage-members tab is clicked (and released).
    */
    private void managers_page_add_team_member_add_buttonActionPerformed() {//GEN-FIRST:event_managers_page_add_team_member_add_buttonActionPerformed
        
        // Get information from the UI:
        if (this.managers_page_manage_teams_search_options.getSelectedIndex() == 0) {
            this.managers_page_add_team_member_actions_message.setText("No team selected.");
            return;
        }
        if (this.managers_page_add_team_member_options.getSelectedIndex() == 0) {
            this.managers_page_add_team_member_actions_message.setText("No getUsername selected.");
            return;
        }
        String[] team_info = Objects.requireNonNull(this.managers_page_manage_teams_search_options.getSelectedItem()).toString().split("/", 2);
        String username_to_add = Objects.requireNonNull(this.managers_page_add_team_member_options.getSelectedItem()).toString();
        
        
        // Update the team ID of the user with @getUsername to the selected team (i.e. team_info[0]).
        boolean successfulAdd;

        DBConnection.connect();

        PreparedStatement ps = DBConnection.prepared_statement("UPDATE MEMBERS SET TEAM_ID = ? WHERE USERNAME = ? AND DELETED != 'Y'");
        successfulAdd = (ps != null)
                    && DBConnection.set_statement_value(ps, 1, team_info[0])
                    && DBConnection.set_statement_value(ps, 2, username_to_add)
                    && DBConnection.execute_update(ps);

        DBConnection.disconnect();
        
        // After the update, reload the tab and log a message to the user to indicate the result.
        if (successfulAdd) {
            this.manage_teams_load_teams();
            this.managers_page_add_team_member_actions_message.setText("Successfully added the user to team");
        } else
            this.managers_page_add_team_member_actions_message.setText("Updating user team failed");
            
    }//GEN-LAST:event_managers_page_add_team_member_add_buttonActionPerformed

    
    /*
        Function to reassign a team leader for the selected team when the reassign-leader button in the manage-members tab is clicked (and released).
    */
    private void managers_page_reassign_team_leader_reassign_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managers_page_reassign_team_leader_reassign_buttonActionPerformed
        
        // Get information from the UI:
        if (this.managers_page_manage_teams_search_options.getSelectedIndex() == 0) {
            this.managers_page_reassign_team_leader_actions_message.setText("No team selected.");
            return;
        }
        if (this.managers_page_reassign_team_leader_options.getSelectedIndex() == 0) {
            this.managers_page_reassign_team_leader_actions_message.setText("No getUsername selected.");
            return;
        }
        String[] team_info = Objects.requireNonNull(this.managers_page_manage_teams_search_options.getSelectedItem()).toString().split("/", 2);
        String new_leader_username = Objects.requireNonNull(this.managers_page_reassign_team_leader_options.getSelectedItem()).toString();
        

        // Update the team leader ID of the selected team (team_info[0]) to the member ID of the selected user with getUsername @new_leader_username.
        boolean successfulUpdate;
        DBConnection.connect();

        PreparedStatement ps = DBConnection.prepared_statement("UPDATE TEAMS SET TEAM_LEADER_ID = (SELECT MEMBER_ID FROM MEMBERS WHERE USERNAME = ? AND DELETED != 'Y') WHERE TEAM_ID = ? AND DELETED != 'Y'");
        successfulUpdate = (ps != null)
                    && DBConnection.set_statement_value(ps, 1, new_leader_username)
                    && DBConnection.set_statement_value(ps, 2, team_info[0])
                    && DBConnection.execute_update(ps);
        DBConnection.disconnect();
        
        // After the update, reload the tab and log a message to the user to indicate the result.
        if (successfulUpdate) {
            this.manage_teams_load_teams();
            this.managers_page_reassign_team_leader_actions_message.setText("Leader assignment successful");
        } else
            this.managers_page_reassign_team_leader_actions_message.setText("Reassignment failed.");
        
    }//GEN-LAST:event_managers_page_reassign_team_leader_reassign_buttonActionPerformed
   
    
    /*
        Function to update a team name when the update-team-name button is clicked (and released):
    */
    private void managers_page_update_team_name_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managers_page_update_team_name_buttonActionPerformed
        // Get team data from the UI:
        String[] team_info = Objects.requireNonNull(this.managers_page_manage_teams_search_options.getSelectedItem()).toString().split("/", 2);  // team_info[0] = team_ID; team_info[1] = leader_username;
        String new_team_name = this.managers_page_update_team_name_text.getText();

        // Validate data, make sure the selected team info is not "[team/leader]", and the new team name is okay.
        if (new_team_name.length() == 0 || team_info[0].equals("[team"))
        {
            // If there is a problem, log a message to the user using the following function and return:
            this.managers_page_update_team_name_message.setText("Please make sure that the name is not empty, and that a team is selected.");
            return;
        }
        
        // Update the team name in the database.
        boolean successfulUpdate;

        DBConnection.connect();

        PreparedStatement ps = DBConnection.prepared_statement("UPDATE TEAMS SET TEAM_ID = ? WHERE TEAM_ID = ? AND DELETED != 'Y'");
        successfulUpdate = (ps != null)
                    && DBConnection.set_statement_value(ps, 1, new_team_name)
                    && DBConnection.set_statement_value(ps, 2, team_info[0])
                    && DBConnection.execute_update(ps);
        
        DBConnection.disconnect();
        
        if (successfulUpdate) {
            // Reload the manage teams tab
            this.manage_teams_load_teams();
            this.managers_page_update_team_name_message.setText("Team name updated.");
        }
        else
            this.managers_page_update_team_name_message.setText("Team name update failed.");
        
    }//GEN-LAST:event_managers_page_update_team_name_buttonActionPerformed

    
    /*
        Functio to delete a team when the delete-team button is clicked (and released):
    */
    private void managers_page_delete_team_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managers_page_delete_team_buttonActionPerformed
        
        // Get team data from the UI:
        if (this.managers_page_manage_teams_search_options.getSelectedIndex() == 0) { this.managers_page_delete_team_message.setText("No team selected."); return; }
        String[] team_info = Objects.requireNonNull(this.managers_page_manage_teams_search_options.getSelectedItem()).toString().split("/", 2);    // team_info[0] = team_ID; team_info[1] = leader_username;
        
        // Delete the team from the database.
        boolean deletedTeam;
        DBConnection.connect();

        PreparedStatement ps = DBConnection.prepared_statement("UPDATE TEAMS SET DELETED = 'Y' WHERE TEAM_ID = ? AND DELETED != 'Y'");
        deletedTeam = (ps != null)
                    && DBConnection.set_statement_value(ps, 1, team_info[0])
                    && DBConnection.execute_update(ps);

        DBConnection.disconnect();
        
        if (deletedTeam) {
            // Reload the manage teams tab
            this.manage_teams_load_teams();
            this.managers_page_delete_team_message.setText("Deleted team successfully.");
        }
        else
            this.managers_page_create_user_message_label.setText("Team deletion failed.");
        
    }//GEN-LAST:event_managers_page_delete_team_buttonActionPerformed

    
    /*
        Function to log out when the logout button is clicked (and released): 
    */
    private void managers_page_logout_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managers_page_logout_buttonActionPerformed
        SystemController.log_out();
    }//GEN-LAST:event_managers_page_logout_buttonActionPerformed

    /*
        Function to navigate to the task page of the selected team when the to-task-page button on the manage-teams tab is clicked (and released):
    */
    private void manage_teams_to_task_page_buttonActionPerformed() {//GEN-FIRST:event_manage_teams_to_task_page_buttonActionPerformed
        String[] team_info = Objects.requireNonNull(this.managers_page_manage_teams_search_options.getSelectedItem()).toString().split("/", 2);
        SystemController.load_current_team(team_info[0]);
        SystemController.to_task_page();
    }//GEN-LAST:event_manage_teams_to_task_page_buttonActionPerformed

    /*
        Function to navigate to the team leader's page of the selected team when the to-team-leaders-page button on the manage-teams tab is clicked (and released):
    */
    private void manage_teams_to_team_leaders_page_buttonActionPerformed() {//GEN-FIRST:event_manage_teams_to_team_leaders_page_buttonActionPerformed
        String[] team_info = Objects.requireNonNull(this.managers_page_manage_teams_search_options.getSelectedItem()).toString().split("/", 2);
        SystemController.load_current_team(team_info[0]);
        SystemController.to_team_leaders_page(null, null);
    }//GEN-LAST:event_manage_teams_to_team_leaders_page_buttonActionPerformed

    

    
    
    
    
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> create_task_recurrence_options;
    private javax.swing.JPanel create_task_recurrence_panel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton manage_teams_to_task_page_button;
    private javax.swing.JButton manage_teams_to_team_leaders_page_button;
    private javax.swing.JLabel managers_page_add_team_member_actions_message;
    private javax.swing.JPanel managers_page_add_team_member_actions_pane;
    private javax.swing.JButton managers_page_add_team_member_add_button;
    private javax.swing.JButton managers_page_add_team_member_cancel_button;
    private javax.swing.JComboBox<String> managers_page_add_team_member_options;
    private javax.swing.JPanel managers_page_add_team_member_pane;
    private javax.swing.JLabel managers_page_add_team_member_source_label;
    private javax.swing.JPanel managers_page_create_task_actions_pane;
    private javax.swing.JLabel managers_page_create_task_assignment_label;
    private javax.swing.JComboBox<String> managers_page_create_task_assignment_options;
    private javax.swing.JPanel managers_page_create_task_assignment_pane;
    private javax.swing.JPanel managers_page_create_task_body_indent_pane;
    private javax.swing.JPanel managers_page_create_task_body_pane;
    private javax.swing.JButton managers_page_create_task_cancel_button;
    private javax.swing.JSeparator managers_page_create_task_categorical_separator_bottom;
    private javax.swing.JSeparator managers_page_create_task_categorical_separator_top;
    private javax.swing.JPanel managers_page_create_task_category_actions_pane;
    private javax.swing.JLabel managers_page_create_task_category_assignment_label;
    private javax.swing.JComboBox<String> managers_page_create_task_category_assignment_options;
    private javax.swing.JPanel managers_page_create_task_category_assignment_pane;
    private javax.swing.JPanel managers_page_create_task_category_body_indent_pane;
    private javax.swing.JPanel managers_page_create_task_category_body_pane;
    private javax.swing.JButton managers_page_create_task_category_cancel_button;
    private javax.swing.JButton managers_page_create_task_category_create_button;
    private javax.swing.JLabel managers_page_create_task_category_description_label;
    private javax.swing.JPanel managers_page_create_task_category_description_pane;
    private javax.swing.JTextArea managers_page_create_task_category_description_text;
    private javax.swing.JLabel managers_page_create_task_category_message_label;
    private javax.swing.JLabel managers_page_create_task_category_name_label;
    private javax.swing.JPanel managers_page_create_task_category_name_pane;
    private javax.swing.JTextField managers_page_create_task_category_name_text;
    private javax.swing.JPanel managers_page_create_task_category_pane;
    private javax.swing.JLabel managers_page_create_task_category_title_label;
    private javax.swing.JPanel managers_page_create_task_category_title_pane;
    private javax.swing.JLabel managers_page_create_task_choose_categories_label;
    private javax.swing.JList<String> managers_page_create_task_choose_categories_list;
    private javax.swing.JPanel managers_page_create_task_choose_categories_pane;
    private javax.swing.JScrollPane managers_page_create_task_choose_categories_scroll_pane;
    private javax.swing.JLabel managers_page_create_task_choose_parent_task_label;
    private javax.swing.JComboBox<String> managers_page_create_task_choose_parent_task_options;
    private javax.swing.JPanel managers_page_create_task_choose_parent_task_pane;
    private javax.swing.JButton managers_page_create_task_create_button;
    private javax.swing.JLabel managers_page_create_task_description_label;
    private javax.swing.JPanel managers_page_create_task_description_pane;
    private javax.swing.JTextArea managers_page_create_task_description_text;
    private javax.swing.JLabel managers_page_create_task_due_date_hint;
    private javax.swing.JLabel managers_page_create_task_due_date_label;
    private javax.swing.JTextField managers_page_create_task_due_date_text;
    private javax.swing.JLabel managers_page_create_task_message_label;
    private javax.swing.JLabel managers_page_create_task_name_label;
    private javax.swing.JPanel managers_page_create_task_name_pane;
    private javax.swing.JTextField managers_page_create_task_name_text;
    private javax.swing.JLabel managers_page_create_task_option_label;
    private javax.swing.JPanel managers_page_create_task_option_pane;
    private javax.swing.JComboBox<String> managers_page_create_task_options;
    private javax.swing.JPanel managers_page_create_task_pane;
    private javax.swing.JPanel managers_page_create_task_priority_colour;
    private javax.swing.JLabel managers_page_create_task_priority_label;
    private javax.swing.JComboBox<String> managers_page_create_task_priority_options;
    private javax.swing.JLabel managers_page_create_task_title_label;
    private javax.swing.JPanel managers_page_create_task_title_pane;
    private javax.swing.JLabel managers_page_create_team_action_message_label;
    private javax.swing.JPanel managers_page_create_team_actions_pane;
    private javax.swing.JPanel managers_page_create_team_body_indent_pane;
    private javax.swing.JPanel managers_page_create_team_body_pane;
    private javax.swing.JButton managers_page_create_team_cancel_button;
    private javax.swing.JButton managers_page_create_team_create_button;
    private javax.swing.JPanel managers_page_create_team_data_fields_pane;
    private javax.swing.JLabel managers_page_create_team_members_fields_add_label;
    private javax.swing.JSeparator managers_page_create_team_members_fields_add_separator;
    private javax.swing.JLabel managers_page_create_team_members_fields_leader_label;
    private javax.swing.JSeparator managers_page_create_team_members_fields_leader_separator;
    private javax.swing.JLabel managers_page_create_team_members_fields_role_label;
    private javax.swing.JPanel managers_page_create_team_members_fields_title_pane;
    private javax.swing.JLabel managers_page_create_team_members_fields_username_label;
    private javax.swing.JSeparator managers_page_create_team_members_fields_username_separator;
    private javax.swing.JLabel managers_page_create_team_members_label;
    private javax.swing.JLabel managers_page_create_team_members_list_label;
    private javax.swing.JPanel managers_page_create_team_members_pane;
    private javax.swing.JScrollPane managers_page_create_team_members_scrollpane;
    private javax.swing.JPanel managers_page_create_team_members_title_pane;
    private javax.swing.JPanel managers_page_create_team_pane;
    private javax.swing.JLabel managers_page_create_team_team_name_label;
    private javax.swing.JPanel managers_page_create_team_team_name_pane;
    private javax.swing.JTextField managers_page_create_team_team_name_text;
    private javax.swing.JLabel managers_page_create_team_title_label;
    private javax.swing.JPanel managers_page_create_team_title_pane;
    private javax.swing.JPanel managers_page_create_teams_members_scrollpane_container;
    private javax.swing.JPanel managers_page_create_user_actions_pane;
    private javax.swing.JPanel managers_page_create_user_body_indent_pane;
    private javax.swing.JPanel managers_page_create_user_body_pane;
    private javax.swing.JButton managers_page_create_user_cancel_button;
    private javax.swing.JButton managers_page_create_user_create_button;
    private javax.swing.JPanel managers_page_create_user_credentials_pane;
    private javax.swing.JLabel managers_page_create_user_message_label;
    private javax.swing.JLabel managers_page_create_user_option_label;
    private javax.swing.JPanel managers_page_create_user_option_pane;
    private javax.swing.JComboBox<String> managers_page_create_user_options;
    private javax.swing.JLabel managers_page_create_user_password_label;
    private javax.swing.JPasswordField managers_page_create_user_password_text;
    private javax.swing.JLabel managers_page_create_user_title_label;
    private javax.swing.JPanel managers_page_create_user_title_pane;
    private javax.swing.JLabel managers_page_create_username_label;
    private javax.swing.JTextField managers_page_create_username_text;
    private javax.swing.JPanel managers_page_delete_team_actions_pane;
    private javax.swing.JButton managers_page_delete_team_button;
    private javax.swing.JLabel managers_page_delete_team_message;
    private javax.swing.JLabel managers_page_edit_password_label;
    private javax.swing.JPasswordField managers_page_edit_password_text;
    private javax.swing.JLabel managers_page_edit_username_label;
    private javax.swing.JTextField managers_page_edit_username_text;
    private javax.swing.JLabel managers_page_header_label;
    private javax.swing.JPanel managers_page_header_pane;
    private javax.swing.JButton managers_page_logout_button;
    private javax.swing.JLabel managers_page_manage_teams_add_member_label;
    private javax.swing.JSeparator managers_page_manage_teams_add_member_separator;
    private javax.swing.JPanel managers_page_manage_teams_body_indent_pane;
    private javax.swing.JPanel managers_page_manage_teams_body_pane;
    private javax.swing.JPanel managers_page_manage_teams_data_fields_pane;
    private javax.swing.JPanel managers_page_manage_teams_pane;
    private javax.swing.JSeparator managers_page_manage_teams_reassign_leader_separator;
    private javax.swing.JSeparator managers_page_manage_teams_remove_member_separator;
    private javax.swing.JLabel managers_page_manage_teams_search_label;
    private javax.swing.JComboBox<String> managers_page_manage_teams_search_options;
    private javax.swing.JPanel managers_page_manage_teams_search_pane;
    private javax.swing.JSeparator managers_page_manage_teams_search_team_separator;
    private javax.swing.JLabel managers_page_manage_teams_title_label;
    private javax.swing.JPanel managers_page_manage_teams_title_pane;
    private javax.swing.JPanel managers_page_manage_users_pane;
    private javax.swing.JSeparator managers_page_manager_users_separator;
    private javax.swing.JComboBox<String> managers_page_modify_user_action_options;
    private javax.swing.JLabel managers_page_modify_user_action_type_label;
    private javax.swing.JPanel managers_page_modify_user_action_type_pane;
    private javax.swing.JPanel managers_page_modify_user_actions_pane;
    private javax.swing.JPanel managers_page_modify_user_body_indent_pane;
    private javax.swing.JPanel managers_page_modify_user_body_pane;
    private javax.swing.JButton managers_page_modify_user_cancel_button;
    private javax.swing.JPanel managers_page_modify_user_edit_pane;
    private javax.swing.JLabel managers_page_modify_user_message_label;
    private javax.swing.JLabel managers_page_modify_user_option_label;
    private javax.swing.JPanel managers_page_modify_user_option_pane;
    private javax.swing.JComboBox<String> managers_page_modify_user_options;
    private javax.swing.JPanel managers_page_modify_user_search_pane;
    private javax.swing.JLabel managers_page_modify_user_search_username_label;
    private javax.swing.JComboBox<String> managers_page_modify_user_search_username_options;
    private javax.swing.JButton managers_page_modify_user_submit_button;
    private javax.swing.JLabel managers_page_modify_user_title_label;
    private javax.swing.JPanel managers_page_modify_user_title_pane;
    private javax.swing.JLabel managers_page_modify_user_unresolved_items_label;
    private javax.swing.JPanel managers_page_modify_user_unresolved_pane;
    private javax.swing.JLabel managers_page_modify_user_unresolved_tasks_label;
    private javax.swing.JList<String> managers_page_modify_user_unresolved_tasks_list;
    private javax.swing.JLabel managers_page_modify_user_unresolved_team_indicator;
    private javax.swing.JLabel managers_page_modify_user_unresolved_team_label;
    private javax.swing.JLabel managers_page_reassign_team_leader_actions_message;
    private javax.swing.JPanel managers_page_reassign_team_leader_actions_pane;
    private javax.swing.JButton managers_page_reassign_team_leader_cancel_button;
    private javax.swing.JLabel managers_page_reassign_team_leader_label;
    private javax.swing.JComboBox<String> managers_page_reassign_team_leader_options;
    private javax.swing.JPanel managers_page_reassign_team_leader_pane;
    private javax.swing.JButton managers_page_reassign_team_leader_reassign_button;
    private javax.swing.JLabel managers_page_reassign_team_leader_source_label;
    private javax.swing.JLabel managers_page_remove_team_member_actions_message;
    private javax.swing.JPanel managers_page_remove_team_member_actions_pane;
    private javax.swing.JButton managers_page_remove_team_member_cancel_button;
    private javax.swing.JLabel managers_page_remove_team_member_label;
    private javax.swing.JComboBox<String> managers_page_remove_team_member_options;
    private javax.swing.JPanel managers_page_remove_team_member_pane;
    private javax.swing.JButton managers_page_remove_team_member_remove_button;
    private javax.swing.JLabel managers_page_remove_team_member_source_label;
    private javax.swing.JTabbedPane managers_page_tabbed_pane;
    private javax.swing.JPanel managers_page_update_team_name_actions_pane;
    private javax.swing.JButton managers_page_update_team_name_button;
    private javax.swing.JLabel managers_page_update_team_name_label;
    private javax.swing.JLabel managers_page_update_team_name_message;
    private javax.swing.JPanel managers_page_update_team_name_pane;
    private javax.swing.JSeparator managers_page_update_team_name_separator;
    private javax.swing.JTextField managers_page_update_team_name_text;
    private javax.swing.JPanel task_page_header_buttons_pane;
    // End of variables declaration//GEN-END:variables
    private final TreeMap<String, TeamlessMemberPanel> _teamless_member_map = new TreeMap<String, TeamlessMemberPanel>();
    
    // Auxiliary variables:
    private javax.swing.ButtonGroup _teamless_member_button_group = new javax.swing.ButtonGroup();
    
    // Member data:
    private boolean __initialised__ = false;

    
    
}